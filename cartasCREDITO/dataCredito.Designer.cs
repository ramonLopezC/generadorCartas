//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5477
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace cartasCREDITO {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dataCredito")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dataCredito : global::System.Data.DataSet {
        
        private reporteSing2DataTable tablereporteSing2;
        
        private cartaSing2DataTable tablecartaSing2;
        
        private clientesDataTable tableclientes;
        
        private sing2DataTable tablesing2;
        
        private datosSing2DataTable tabledatosSing2;
        
        private plural2DataTable tableplural2;
        
        private datosPlural2DataTable tabledatosPlural2;
        
        private datosPlural1DataTable tabledatosPlural1;
        
        private datosPlural3DataTable tabledatosPlural3;
        
        private datosSing1DataTable tabledatosSing1;
        
        private datosSing3DataTable tabledatosSing3;
        
        private datosSing4DataTable tabledatosSing4;
        
        private datosSing5DataTable tabledatosSing5;
        
        private datosPlural4DataTable tabledatosPlural4;
        
        private datosPlural5DataTable tabledatosPlural5;
        
        private sing4DataTable tablesing4;
        
        private sing5DataTable tablesing5;
        
        private plural4DataTable tableplural4;
        
        private plural5DataTable tableplural5;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dataCredito() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dataCredito(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["reporteSing2"] != null)) {
                    base.Tables.Add(new reporteSing2DataTable(ds.Tables["reporteSing2"]));
                }
                if ((ds.Tables["cartaSing2"] != null)) {
                    base.Tables.Add(new cartaSing2DataTable(ds.Tables["cartaSing2"]));
                }
                if ((ds.Tables["clientes"] != null)) {
                    base.Tables.Add(new clientesDataTable(ds.Tables["clientes"]));
                }
                if ((ds.Tables["sing2"] != null)) {
                    base.Tables.Add(new sing2DataTable(ds.Tables["sing2"]));
                }
                if ((ds.Tables["datosSing2"] != null)) {
                    base.Tables.Add(new datosSing2DataTable(ds.Tables["datosSing2"]));
                }
                if ((ds.Tables["plural2"] != null)) {
                    base.Tables.Add(new plural2DataTable(ds.Tables["plural2"]));
                }
                if ((ds.Tables["datosPlural2"] != null)) {
                    base.Tables.Add(new datosPlural2DataTable(ds.Tables["datosPlural2"]));
                }
                if ((ds.Tables["datosPlural1"] != null)) {
                    base.Tables.Add(new datosPlural1DataTable(ds.Tables["datosPlural1"]));
                }
                if ((ds.Tables["datosPlural3"] != null)) {
                    base.Tables.Add(new datosPlural3DataTable(ds.Tables["datosPlural3"]));
                }
                if ((ds.Tables["datosSing1"] != null)) {
                    base.Tables.Add(new datosSing1DataTable(ds.Tables["datosSing1"]));
                }
                if ((ds.Tables["datosSing3"] != null)) {
                    base.Tables.Add(new datosSing3DataTable(ds.Tables["datosSing3"]));
                }
                if ((ds.Tables["datosSing4"] != null)) {
                    base.Tables.Add(new datosSing4DataTable(ds.Tables["datosSing4"]));
                }
                if ((ds.Tables["datosSing5"] != null)) {
                    base.Tables.Add(new datosSing5DataTable(ds.Tables["datosSing5"]));
                }
                if ((ds.Tables["datosPlural4"] != null)) {
                    base.Tables.Add(new datosPlural4DataTable(ds.Tables["datosPlural4"]));
                }
                if ((ds.Tables["datosPlural5"] != null)) {
                    base.Tables.Add(new datosPlural5DataTable(ds.Tables["datosPlural5"]));
                }
                if ((ds.Tables["sing4"] != null)) {
                    base.Tables.Add(new sing4DataTable(ds.Tables["sing4"]));
                }
                if ((ds.Tables["sing5"] != null)) {
                    base.Tables.Add(new sing5DataTable(ds.Tables["sing5"]));
                }
                if ((ds.Tables["plural4"] != null)) {
                    base.Tables.Add(new plural4DataTable(ds.Tables["plural4"]));
                }
                if ((ds.Tables["plural5"] != null)) {
                    base.Tables.Add(new plural5DataTable(ds.Tables["plural5"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public reporteSing2DataTable reporteSing2 {
            get {
                return this.tablereporteSing2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public cartaSing2DataTable cartaSing2 {
            get {
                return this.tablecartaSing2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public clientesDataTable clientes {
            get {
                return this.tableclientes;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sing2DataTable sing2 {
            get {
                return this.tablesing2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public datosSing2DataTable datosSing2 {
            get {
                return this.tabledatosSing2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public plural2DataTable plural2 {
            get {
                return this.tableplural2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public datosPlural2DataTable datosPlural2 {
            get {
                return this.tabledatosPlural2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public datosPlural1DataTable datosPlural1 {
            get {
                return this.tabledatosPlural1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public datosPlural3DataTable datosPlural3 {
            get {
                return this.tabledatosPlural3;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public datosSing1DataTable datosSing1 {
            get {
                return this.tabledatosSing1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public datosSing3DataTable datosSing3 {
            get {
                return this.tabledatosSing3;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public datosSing4DataTable datosSing4 {
            get {
                return this.tabledatosSing4;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public datosSing5DataTable datosSing5 {
            get {
                return this.tabledatosSing5;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public datosPlural4DataTable datosPlural4 {
            get {
                return this.tabledatosPlural4;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public datosPlural5DataTable datosPlural5 {
            get {
                return this.tabledatosPlural5;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sing4DataTable sing4 {
            get {
                return this.tablesing4;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sing5DataTable sing5 {
            get {
                return this.tablesing5;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public plural4DataTable plural4 {
            get {
                return this.tableplural4;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public plural5DataTable plural5 {
            get {
                return this.tableplural5;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dataCredito cln = ((dataCredito)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["reporteSing2"] != null)) {
                    base.Tables.Add(new reporteSing2DataTable(ds.Tables["reporteSing2"]));
                }
                if ((ds.Tables["cartaSing2"] != null)) {
                    base.Tables.Add(new cartaSing2DataTable(ds.Tables["cartaSing2"]));
                }
                if ((ds.Tables["clientes"] != null)) {
                    base.Tables.Add(new clientesDataTable(ds.Tables["clientes"]));
                }
                if ((ds.Tables["sing2"] != null)) {
                    base.Tables.Add(new sing2DataTable(ds.Tables["sing2"]));
                }
                if ((ds.Tables["datosSing2"] != null)) {
                    base.Tables.Add(new datosSing2DataTable(ds.Tables["datosSing2"]));
                }
                if ((ds.Tables["plural2"] != null)) {
                    base.Tables.Add(new plural2DataTable(ds.Tables["plural2"]));
                }
                if ((ds.Tables["datosPlural2"] != null)) {
                    base.Tables.Add(new datosPlural2DataTable(ds.Tables["datosPlural2"]));
                }
                if ((ds.Tables["datosPlural1"] != null)) {
                    base.Tables.Add(new datosPlural1DataTable(ds.Tables["datosPlural1"]));
                }
                if ((ds.Tables["datosPlural3"] != null)) {
                    base.Tables.Add(new datosPlural3DataTable(ds.Tables["datosPlural3"]));
                }
                if ((ds.Tables["datosSing1"] != null)) {
                    base.Tables.Add(new datosSing1DataTable(ds.Tables["datosSing1"]));
                }
                if ((ds.Tables["datosSing3"] != null)) {
                    base.Tables.Add(new datosSing3DataTable(ds.Tables["datosSing3"]));
                }
                if ((ds.Tables["datosSing4"] != null)) {
                    base.Tables.Add(new datosSing4DataTable(ds.Tables["datosSing4"]));
                }
                if ((ds.Tables["datosSing5"] != null)) {
                    base.Tables.Add(new datosSing5DataTable(ds.Tables["datosSing5"]));
                }
                if ((ds.Tables["datosPlural4"] != null)) {
                    base.Tables.Add(new datosPlural4DataTable(ds.Tables["datosPlural4"]));
                }
                if ((ds.Tables["datosPlural5"] != null)) {
                    base.Tables.Add(new datosPlural5DataTable(ds.Tables["datosPlural5"]));
                }
                if ((ds.Tables["sing4"] != null)) {
                    base.Tables.Add(new sing4DataTable(ds.Tables["sing4"]));
                }
                if ((ds.Tables["sing5"] != null)) {
                    base.Tables.Add(new sing5DataTable(ds.Tables["sing5"]));
                }
                if ((ds.Tables["plural4"] != null)) {
                    base.Tables.Add(new plural4DataTable(ds.Tables["plural4"]));
                }
                if ((ds.Tables["plural5"] != null)) {
                    base.Tables.Add(new plural5DataTable(ds.Tables["plural5"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablereporteSing2 = ((reporteSing2DataTable)(base.Tables["reporteSing2"]));
            if ((initTable == true)) {
                if ((this.tablereporteSing2 != null)) {
                    this.tablereporteSing2.InitVars();
                }
            }
            this.tablecartaSing2 = ((cartaSing2DataTable)(base.Tables["cartaSing2"]));
            if ((initTable == true)) {
                if ((this.tablecartaSing2 != null)) {
                    this.tablecartaSing2.InitVars();
                }
            }
            this.tableclientes = ((clientesDataTable)(base.Tables["clientes"]));
            if ((initTable == true)) {
                if ((this.tableclientes != null)) {
                    this.tableclientes.InitVars();
                }
            }
            this.tablesing2 = ((sing2DataTable)(base.Tables["sing2"]));
            if ((initTable == true)) {
                if ((this.tablesing2 != null)) {
                    this.tablesing2.InitVars();
                }
            }
            this.tabledatosSing2 = ((datosSing2DataTable)(base.Tables["datosSing2"]));
            if ((initTable == true)) {
                if ((this.tabledatosSing2 != null)) {
                    this.tabledatosSing2.InitVars();
                }
            }
            this.tableplural2 = ((plural2DataTable)(base.Tables["plural2"]));
            if ((initTable == true)) {
                if ((this.tableplural2 != null)) {
                    this.tableplural2.InitVars();
                }
            }
            this.tabledatosPlural2 = ((datosPlural2DataTable)(base.Tables["datosPlural2"]));
            if ((initTable == true)) {
                if ((this.tabledatosPlural2 != null)) {
                    this.tabledatosPlural2.InitVars();
                }
            }
            this.tabledatosPlural1 = ((datosPlural1DataTable)(base.Tables["datosPlural1"]));
            if ((initTable == true)) {
                if ((this.tabledatosPlural1 != null)) {
                    this.tabledatosPlural1.InitVars();
                }
            }
            this.tabledatosPlural3 = ((datosPlural3DataTable)(base.Tables["datosPlural3"]));
            if ((initTable == true)) {
                if ((this.tabledatosPlural3 != null)) {
                    this.tabledatosPlural3.InitVars();
                }
            }
            this.tabledatosSing1 = ((datosSing1DataTable)(base.Tables["datosSing1"]));
            if ((initTable == true)) {
                if ((this.tabledatosSing1 != null)) {
                    this.tabledatosSing1.InitVars();
                }
            }
            this.tabledatosSing3 = ((datosSing3DataTable)(base.Tables["datosSing3"]));
            if ((initTable == true)) {
                if ((this.tabledatosSing3 != null)) {
                    this.tabledatosSing3.InitVars();
                }
            }
            this.tabledatosSing4 = ((datosSing4DataTable)(base.Tables["datosSing4"]));
            if ((initTable == true)) {
                if ((this.tabledatosSing4 != null)) {
                    this.tabledatosSing4.InitVars();
                }
            }
            this.tabledatosSing5 = ((datosSing5DataTable)(base.Tables["datosSing5"]));
            if ((initTable == true)) {
                if ((this.tabledatosSing5 != null)) {
                    this.tabledatosSing5.InitVars();
                }
            }
            this.tabledatosPlural4 = ((datosPlural4DataTable)(base.Tables["datosPlural4"]));
            if ((initTable == true)) {
                if ((this.tabledatosPlural4 != null)) {
                    this.tabledatosPlural4.InitVars();
                }
            }
            this.tabledatosPlural5 = ((datosPlural5DataTable)(base.Tables["datosPlural5"]));
            if ((initTable == true)) {
                if ((this.tabledatosPlural5 != null)) {
                    this.tabledatosPlural5.InitVars();
                }
            }
            this.tablesing4 = ((sing4DataTable)(base.Tables["sing4"]));
            if ((initTable == true)) {
                if ((this.tablesing4 != null)) {
                    this.tablesing4.InitVars();
                }
            }
            this.tablesing5 = ((sing5DataTable)(base.Tables["sing5"]));
            if ((initTable == true)) {
                if ((this.tablesing5 != null)) {
                    this.tablesing5.InitVars();
                }
            }
            this.tableplural4 = ((plural4DataTable)(base.Tables["plural4"]));
            if ((initTable == true)) {
                if ((this.tableplural4 != null)) {
                    this.tableplural4.InitVars();
                }
            }
            this.tableplural5 = ((plural5DataTable)(base.Tables["plural5"]));
            if ((initTable == true)) {
                if ((this.tableplural5 != null)) {
                    this.tableplural5.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dataCredito";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dataCredito.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablereporteSing2 = new reporteSing2DataTable();
            base.Tables.Add(this.tablereporteSing2);
            this.tablecartaSing2 = new cartaSing2DataTable();
            base.Tables.Add(this.tablecartaSing2);
            this.tableclientes = new clientesDataTable();
            base.Tables.Add(this.tableclientes);
            this.tablesing2 = new sing2DataTable();
            base.Tables.Add(this.tablesing2);
            this.tabledatosSing2 = new datosSing2DataTable();
            base.Tables.Add(this.tabledatosSing2);
            this.tableplural2 = new plural2DataTable();
            base.Tables.Add(this.tableplural2);
            this.tabledatosPlural2 = new datosPlural2DataTable();
            base.Tables.Add(this.tabledatosPlural2);
            this.tabledatosPlural1 = new datosPlural1DataTable();
            base.Tables.Add(this.tabledatosPlural1);
            this.tabledatosPlural3 = new datosPlural3DataTable();
            base.Tables.Add(this.tabledatosPlural3);
            this.tabledatosSing1 = new datosSing1DataTable();
            base.Tables.Add(this.tabledatosSing1);
            this.tabledatosSing3 = new datosSing3DataTable();
            base.Tables.Add(this.tabledatosSing3);
            this.tabledatosSing4 = new datosSing4DataTable();
            base.Tables.Add(this.tabledatosSing4);
            this.tabledatosSing5 = new datosSing5DataTable();
            base.Tables.Add(this.tabledatosSing5);
            this.tabledatosPlural4 = new datosPlural4DataTable();
            base.Tables.Add(this.tabledatosPlural4);
            this.tabledatosPlural5 = new datosPlural5DataTable();
            base.Tables.Add(this.tabledatosPlural5);
            this.tablesing4 = new sing4DataTable();
            base.Tables.Add(this.tablesing4);
            this.tablesing5 = new sing5DataTable();
            base.Tables.Add(this.tablesing5);
            this.tableplural4 = new plural4DataTable();
            base.Tables.Add(this.tableplural4);
            this.tableplural5 = new plural5DataTable();
            base.Tables.Add(this.tableplural5);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializereporteSing2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializecartaSing2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeclientes() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializesing2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedatosSing2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeplural2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedatosPlural2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedatosPlural1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedatosPlural3() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedatosSing1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedatosSing3() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedatosSing4() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedatosSing5() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedatosPlural4() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedatosPlural5() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializesing4() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializesing5() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeplural4() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeplural5() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dataCredito ds = new dataCredito();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void reporteSing2RowChangeEventHandler(object sender, reporteSing2RowChangeEvent e);
        
        public delegate void cartaSing2RowChangeEventHandler(object sender, cartaSing2RowChangeEvent e);
        
        public delegate void clientesRowChangeEventHandler(object sender, clientesRowChangeEvent e);
        
        public delegate void sing2RowChangeEventHandler(object sender, sing2RowChangeEvent e);
        
        public delegate void datosSing2RowChangeEventHandler(object sender, datosSing2RowChangeEvent e);
        
        public delegate void plural2RowChangeEventHandler(object sender, plural2RowChangeEvent e);
        
        public delegate void datosPlural2RowChangeEventHandler(object sender, datosPlural2RowChangeEvent e);
        
        public delegate void datosPlural1RowChangeEventHandler(object sender, datosPlural1RowChangeEvent e);
        
        public delegate void datosPlural3RowChangeEventHandler(object sender, datosPlural3RowChangeEvent e);
        
        public delegate void datosSing1RowChangeEventHandler(object sender, datosSing1RowChangeEvent e);
        
        public delegate void datosSing3RowChangeEventHandler(object sender, datosSing3RowChangeEvent e);
        
        public delegate void datosSing4RowChangeEventHandler(object sender, datosSing4RowChangeEvent e);
        
        public delegate void datosSing5RowChangeEventHandler(object sender, datosSing5RowChangeEvent e);
        
        public delegate void datosPlural4RowChangeEventHandler(object sender, datosPlural4RowChangeEvent e);
        
        public delegate void datosPlural5RowChangeEventHandler(object sender, datosPlural5RowChangeEvent e);
        
        public delegate void sing4RowChangeEventHandler(object sender, sing4RowChangeEvent e);
        
        public delegate void sing5RowChangeEventHandler(object sender, sing5RowChangeEvent e);
        
        public delegate void plural4RowChangeEventHandler(object sender, plural4RowChangeEvent e);
        
        public delegate void plural5RowChangeEventHandler(object sender, plural5RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class reporteSing2DataTable : global::System.Data.TypedTableBase<reporteSing2Row> {
            
            private global::System.Data.DataColumn columntitulo;
            
            private global::System.Data.DataColumn columncarta;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public reporteSing2DataTable() {
                this.TableName = "reporteSing2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal reporteSing2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected reporteSing2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tituloColumn {
                get {
                    return this.columntitulo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cartaColumn {
                get {
                    return this.columncarta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public reporteSing2Row this[int index] {
                get {
                    return ((reporteSing2Row)(this.Rows[index]));
                }
            }
            
            public event reporteSing2RowChangeEventHandler reporteSing2RowChanging;
            
            public event reporteSing2RowChangeEventHandler reporteSing2RowChanged;
            
            public event reporteSing2RowChangeEventHandler reporteSing2RowDeleting;
            
            public event reporteSing2RowChangeEventHandler reporteSing2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddreporteSing2Row(reporteSing2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public reporteSing2Row AddreporteSing2Row(string titulo, string carta) {
                reporteSing2Row rowreporteSing2Row = ((reporteSing2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        titulo,
                        carta};
                rowreporteSing2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowreporteSing2Row);
                return rowreporteSing2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                reporteSing2DataTable cln = ((reporteSing2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new reporteSing2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columntitulo = base.Columns["titulo"];
                this.columncarta = base.Columns["carta"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columntitulo = new global::System.Data.DataColumn("titulo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntitulo);
                this.columncarta = new global::System.Data.DataColumn("carta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncarta);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public reporteSing2Row NewreporteSing2Row() {
                return ((reporteSing2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new reporteSing2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(reporteSing2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.reporteSing2RowChanged != null)) {
                    this.reporteSing2RowChanged(this, new reporteSing2RowChangeEvent(((reporteSing2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.reporteSing2RowChanging != null)) {
                    this.reporteSing2RowChanging(this, new reporteSing2RowChangeEvent(((reporteSing2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.reporteSing2RowDeleted != null)) {
                    this.reporteSing2RowDeleted(this, new reporteSing2RowChangeEvent(((reporteSing2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.reporteSing2RowDeleting != null)) {
                    this.reporteSing2RowDeleting(this, new reporteSing2RowChangeEvent(((reporteSing2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovereporteSing2Row(reporteSing2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dataCredito ds = new dataCredito();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "reporteSing2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class cartaSing2DataTable : global::System.Data.TypedTableBase<cartaSing2Row> {
            
            private global::System.Data.DataColumn columnparte1;
            
            private global::System.Data.DataColumn columnparte2;
            
            private global::System.Data.DataColumn columnparte3;
            
            private global::System.Data.DataColumn columnparte4;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public cartaSing2DataTable() {
                this.TableName = "cartaSing2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal cartaSing2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected cartaSing2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn parte1Column {
                get {
                    return this.columnparte1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn parte2Column {
                get {
                    return this.columnparte2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn parte3Column {
                get {
                    return this.columnparte3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn parte4Column {
                get {
                    return this.columnparte4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public cartaSing2Row this[int index] {
                get {
                    return ((cartaSing2Row)(this.Rows[index]));
                }
            }
            
            public event cartaSing2RowChangeEventHandler cartaSing2RowChanging;
            
            public event cartaSing2RowChangeEventHandler cartaSing2RowChanged;
            
            public event cartaSing2RowChangeEventHandler cartaSing2RowDeleting;
            
            public event cartaSing2RowChangeEventHandler cartaSing2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddcartaSing2Row(cartaSing2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public cartaSing2Row AddcartaSing2Row(string parte1, string parte2, string parte3, string parte4) {
                cartaSing2Row rowcartaSing2Row = ((cartaSing2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        parte1,
                        parte2,
                        parte3,
                        parte4};
                rowcartaSing2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowcartaSing2Row);
                return rowcartaSing2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                cartaSing2DataTable cln = ((cartaSing2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new cartaSing2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnparte1 = base.Columns["parte1"];
                this.columnparte2 = base.Columns["parte2"];
                this.columnparte3 = base.Columns["parte3"];
                this.columnparte4 = base.Columns["parte4"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnparte1 = new global::System.Data.DataColumn("parte1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnparte1);
                this.columnparte2 = new global::System.Data.DataColumn("parte2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnparte2);
                this.columnparte3 = new global::System.Data.DataColumn("parte3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnparte3);
                this.columnparte4 = new global::System.Data.DataColumn("parte4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnparte4);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public cartaSing2Row NewcartaSing2Row() {
                return ((cartaSing2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new cartaSing2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(cartaSing2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.cartaSing2RowChanged != null)) {
                    this.cartaSing2RowChanged(this, new cartaSing2RowChangeEvent(((cartaSing2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.cartaSing2RowChanging != null)) {
                    this.cartaSing2RowChanging(this, new cartaSing2RowChangeEvent(((cartaSing2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.cartaSing2RowDeleted != null)) {
                    this.cartaSing2RowDeleted(this, new cartaSing2RowChangeEvent(((cartaSing2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.cartaSing2RowDeleting != null)) {
                    this.cartaSing2RowDeleting(this, new cartaSing2RowChangeEvent(((cartaSing2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovecartaSing2Row(cartaSing2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dataCredito ds = new dataCredito();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "cartaSing2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class clientesDataTable : global::System.Data.TypedTableBase<clientesRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnfecha;
            
            private global::System.Data.DataColumn columnnombre;
            
            private global::System.Data.DataColumn columndireccion;
            
            private global::System.Data.DataColumn columndireccion2;
            
            private global::System.Data.DataColumn columnciudad;
            
            private global::System.Data.DataColumn columntipo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public clientesDataTable() {
                this.TableName = "clientes";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal clientesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected clientesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fechaColumn {
                get {
                    return this.columnfecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nombreColumn {
                get {
                    return this.columnnombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn direccionColumn {
                get {
                    return this.columndireccion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn direccion2Column {
                get {
                    return this.columndireccion2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ciudadColumn {
                get {
                    return this.columnciudad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tipoColumn {
                get {
                    return this.columntipo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public clientesRow this[int index] {
                get {
                    return ((clientesRow)(this.Rows[index]));
                }
            }
            
            public event clientesRowChangeEventHandler clientesRowChanging;
            
            public event clientesRowChangeEventHandler clientesRowChanged;
            
            public event clientesRowChangeEventHandler clientesRowDeleting;
            
            public event clientesRowChangeEventHandler clientesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddclientesRow(clientesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public clientesRow AddclientesRow(string id, string fecha, string nombre, string direccion, string direccion2, string ciudad, string tipo) {
                clientesRow rowclientesRow = ((clientesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id,
                        fecha,
                        nombre,
                        direccion,
                        direccion2,
                        ciudad,
                        tipo};
                rowclientesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowclientesRow);
                return rowclientesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                clientesDataTable cln = ((clientesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new clientesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnfecha = base.Columns["fecha"];
                this.columnnombre = base.Columns["nombre"];
                this.columndireccion = base.Columns["direccion"];
                this.columndireccion2 = base.Columns["direccion2"];
                this.columnciudad = base.Columns["ciudad"];
                this.columntipo = base.Columns["tipo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnfecha = new global::System.Data.DataColumn("fecha", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfecha);
                this.columnnombre = new global::System.Data.DataColumn("nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnombre);
                this.columndireccion = new global::System.Data.DataColumn("direccion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndireccion);
                this.columndireccion2 = new global::System.Data.DataColumn("direccion2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndireccion2);
                this.columnciudad = new global::System.Data.DataColumn("ciudad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnciudad);
                this.columntipo = new global::System.Data.DataColumn("tipo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntipo);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public clientesRow NewclientesRow() {
                return ((clientesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new clientesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(clientesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.clientesRowChanged != null)) {
                    this.clientesRowChanged(this, new clientesRowChangeEvent(((clientesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.clientesRowChanging != null)) {
                    this.clientesRowChanging(this, new clientesRowChangeEvent(((clientesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.clientesRowDeleted != null)) {
                    this.clientesRowDeleted(this, new clientesRowChangeEvent(((clientesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.clientesRowDeleting != null)) {
                    this.clientesRowDeleting(this, new clientesRowChangeEvent(((clientesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveclientesRow(clientesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dataCredito ds = new dataCredito();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "clientesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class sing2DataTable : global::System.Data.TypedTableBase<sing2Row> {
            
            private global::System.Data.DataColumn columnencabezado;
            
            private global::System.Data.DataColumn columnsaludo;
            
            private global::System.Data.DataColumn columnmeses;
            
            private global::System.Data.DataColumn columnanio;
            
            private global::System.Data.DataColumn columnpie;
            
            private global::System.Data.DataColumn columnasesor;
            
            private global::System.Data.DataColumn columncantidad;
            
            private global::System.Data.DataColumn columncantidadL;
            
            private global::System.Data.DataColumn columnfecha;
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnidCliente;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sing2DataTable() {
                this.TableName = "sing2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sing2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected sing2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn encabezadoColumn {
                get {
                    return this.columnencabezado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn saludoColumn {
                get {
                    return this.columnsaludo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mesesColumn {
                get {
                    return this.columnmeses;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn anioColumn {
                get {
                    return this.columnanio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pieColumn {
                get {
                    return this.columnpie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn asesorColumn {
                get {
                    return this.columnasesor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cantidadColumn {
                get {
                    return this.columncantidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cantidadLColumn {
                get {
                    return this.columncantidadL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fechaColumn {
                get {
                    return this.columnfecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idClienteColumn {
                get {
                    return this.columnidCliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sing2Row this[int index] {
                get {
                    return ((sing2Row)(this.Rows[index]));
                }
            }
            
            public event sing2RowChangeEventHandler sing2RowChanging;
            
            public event sing2RowChangeEventHandler sing2RowChanged;
            
            public event sing2RowChangeEventHandler sing2RowDeleting;
            
            public event sing2RowChangeEventHandler sing2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addsing2Row(sing2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sing2Row Addsing2Row(string encabezado, string saludo, string meses, string anio, string pie, string asesor, string cantidad, string cantidadL, System.DateTime fecha, string id, string idCliente) {
                sing2Row rowsing2Row = ((sing2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        encabezado,
                        saludo,
                        meses,
                        anio,
                        pie,
                        asesor,
                        cantidad,
                        cantidadL,
                        fecha,
                        id,
                        idCliente};
                rowsing2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowsing2Row);
                return rowsing2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                sing2DataTable cln = ((sing2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new sing2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnencabezado = base.Columns["encabezado"];
                this.columnsaludo = base.Columns["saludo"];
                this.columnmeses = base.Columns["meses"];
                this.columnanio = base.Columns["anio"];
                this.columnpie = base.Columns["pie"];
                this.columnasesor = base.Columns["asesor"];
                this.columncantidad = base.Columns["cantidad"];
                this.columncantidadL = base.Columns["cantidadL"];
                this.columnfecha = base.Columns["fecha"];
                this.columnid = base.Columns["id"];
                this.columnidCliente = base.Columns["idCliente"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnencabezado = new global::System.Data.DataColumn("encabezado", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnencabezado);
                this.columnsaludo = new global::System.Data.DataColumn("saludo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsaludo);
                this.columnmeses = new global::System.Data.DataColumn("meses", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmeses);
                this.columnanio = new global::System.Data.DataColumn("anio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnanio);
                this.columnpie = new global::System.Data.DataColumn("pie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpie);
                this.columnasesor = new global::System.Data.DataColumn("asesor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnasesor);
                this.columncantidad = new global::System.Data.DataColumn("cantidad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncantidad);
                this.columncantidadL = new global::System.Data.DataColumn("cantidadL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncantidadL);
                this.columnfecha = new global::System.Data.DataColumn("fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfecha);
                this.columnid = new global::System.Data.DataColumn("id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidCliente = new global::System.Data.DataColumn("idCliente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidCliente);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sing2Row Newsing2Row() {
                return ((sing2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new sing2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(sing2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sing2RowChanged != null)) {
                    this.sing2RowChanged(this, new sing2RowChangeEvent(((sing2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sing2RowChanging != null)) {
                    this.sing2RowChanging(this, new sing2RowChangeEvent(((sing2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sing2RowDeleted != null)) {
                    this.sing2RowDeleted(this, new sing2RowChangeEvent(((sing2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sing2RowDeleting != null)) {
                    this.sing2RowDeleting(this, new sing2RowChangeEvent(((sing2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removesing2Row(sing2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dataCredito ds = new dataCredito();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "sing2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class datosSing2DataTable : global::System.Data.TypedTableBase<datosSing2Row> {
            
            private global::System.Data.DataColumn columnnombre;
            
            private global::System.Data.DataColumn columndireccion;
            
            private global::System.Data.DataColumn columndireccion2;
            
            private global::System.Data.DataColumn columnciudad;
            
            private global::System.Data.DataColumn columnencabezado;
            
            private global::System.Data.DataColumn columnsaludo;
            
            private global::System.Data.DataColumn columnmeses;
            
            private global::System.Data.DataColumn columnanio;
            
            private global::System.Data.DataColumn columnpie;
            
            private global::System.Data.DataColumn columnasesor;
            
            private global::System.Data.DataColumn columncantidad;
            
            private global::System.Data.DataColumn columncantidadL;
            
            private global::System.Data.DataColumn columnfecha;
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnidCliente;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosSing2DataTable() {
                this.TableName = "datosSing2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal datosSing2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected datosSing2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nombreColumn {
                get {
                    return this.columnnombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn direccionColumn {
                get {
                    return this.columndireccion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn direccion2Column {
                get {
                    return this.columndireccion2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ciudadColumn {
                get {
                    return this.columnciudad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn encabezadoColumn {
                get {
                    return this.columnencabezado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn saludoColumn {
                get {
                    return this.columnsaludo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mesesColumn {
                get {
                    return this.columnmeses;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn anioColumn {
                get {
                    return this.columnanio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pieColumn {
                get {
                    return this.columnpie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn asesorColumn {
                get {
                    return this.columnasesor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cantidadColumn {
                get {
                    return this.columncantidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cantidadLColumn {
                get {
                    return this.columncantidadL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fechaColumn {
                get {
                    return this.columnfecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idClienteColumn {
                get {
                    return this.columnidCliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosSing2Row this[int index] {
                get {
                    return ((datosSing2Row)(this.Rows[index]));
                }
            }
            
            public event datosSing2RowChangeEventHandler datosSing2RowChanging;
            
            public event datosSing2RowChangeEventHandler datosSing2RowChanged;
            
            public event datosSing2RowChangeEventHandler datosSing2RowDeleting;
            
            public event datosSing2RowChangeEventHandler datosSing2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddatosSing2Row(datosSing2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosSing2Row AdddatosSing2Row(string nombre, string direccion, string direccion2, string ciudad, string encabezado, string saludo, string meses, string anio, string pie, string asesor, string cantidad, string cantidadL, System.DateTime fecha, string id, string idCliente) {
                datosSing2Row rowdatosSing2Row = ((datosSing2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        nombre,
                        direccion,
                        direccion2,
                        ciudad,
                        encabezado,
                        saludo,
                        meses,
                        anio,
                        pie,
                        asesor,
                        cantidad,
                        cantidadL,
                        fecha,
                        id,
                        idCliente};
                rowdatosSing2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowdatosSing2Row);
                return rowdatosSing2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                datosSing2DataTable cln = ((datosSing2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new datosSing2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnnombre = base.Columns["nombre"];
                this.columndireccion = base.Columns["direccion"];
                this.columndireccion2 = base.Columns["direccion2"];
                this.columnciudad = base.Columns["ciudad"];
                this.columnencabezado = base.Columns["encabezado"];
                this.columnsaludo = base.Columns["saludo"];
                this.columnmeses = base.Columns["meses"];
                this.columnanio = base.Columns["anio"];
                this.columnpie = base.Columns["pie"];
                this.columnasesor = base.Columns["asesor"];
                this.columncantidad = base.Columns["cantidad"];
                this.columncantidadL = base.Columns["cantidadL"];
                this.columnfecha = base.Columns["fecha"];
                this.columnid = base.Columns["id"];
                this.columnidCliente = base.Columns["idCliente"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnnombre = new global::System.Data.DataColumn("nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnombre);
                this.columndireccion = new global::System.Data.DataColumn("direccion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndireccion);
                this.columndireccion2 = new global::System.Data.DataColumn("direccion2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndireccion2);
                this.columnciudad = new global::System.Data.DataColumn("ciudad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnciudad);
                this.columnencabezado = new global::System.Data.DataColumn("encabezado", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnencabezado);
                this.columnsaludo = new global::System.Data.DataColumn("saludo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsaludo);
                this.columnmeses = new global::System.Data.DataColumn("meses", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmeses);
                this.columnanio = new global::System.Data.DataColumn("anio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnanio);
                this.columnpie = new global::System.Data.DataColumn("pie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpie);
                this.columnasesor = new global::System.Data.DataColumn("asesor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnasesor);
                this.columncantidad = new global::System.Data.DataColumn("cantidad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncantidad);
                this.columncantidadL = new global::System.Data.DataColumn("cantidadL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncantidadL);
                this.columnfecha = new global::System.Data.DataColumn("fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfecha);
                this.columnid = new global::System.Data.DataColumn("id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidCliente = new global::System.Data.DataColumn("idCliente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidCliente);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosSing2Row NewdatosSing2Row() {
                return ((datosSing2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new datosSing2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(datosSing2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.datosSing2RowChanged != null)) {
                    this.datosSing2RowChanged(this, new datosSing2RowChangeEvent(((datosSing2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.datosSing2RowChanging != null)) {
                    this.datosSing2RowChanging(this, new datosSing2RowChangeEvent(((datosSing2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.datosSing2RowDeleted != null)) {
                    this.datosSing2RowDeleted(this, new datosSing2RowChangeEvent(((datosSing2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.datosSing2RowDeleting != null)) {
                    this.datosSing2RowDeleting(this, new datosSing2RowChangeEvent(((datosSing2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedatosSing2Row(datosSing2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dataCredito ds = new dataCredito();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "datosSing2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class plural2DataTable : global::System.Data.TypedTableBase<plural2Row> {
            
            private global::System.Data.DataColumn columnmeses;
            
            private global::System.Data.DataColumn columnanio;
            
            private global::System.Data.DataColumn columnpie;
            
            private global::System.Data.DataColumn columnasesor;
            
            private global::System.Data.DataColumn columncantidad;
            
            private global::System.Data.DataColumn columncantidadL;
            
            private global::System.Data.DataColumn columnfecha;
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnidCliente;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public plural2DataTable() {
                this.TableName = "plural2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal plural2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected plural2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mesesColumn {
                get {
                    return this.columnmeses;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn anioColumn {
                get {
                    return this.columnanio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pieColumn {
                get {
                    return this.columnpie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn asesorColumn {
                get {
                    return this.columnasesor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cantidadColumn {
                get {
                    return this.columncantidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cantidadLColumn {
                get {
                    return this.columncantidadL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fechaColumn {
                get {
                    return this.columnfecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idClienteColumn {
                get {
                    return this.columnidCliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public plural2Row this[int index] {
                get {
                    return ((plural2Row)(this.Rows[index]));
                }
            }
            
            public event plural2RowChangeEventHandler plural2RowChanging;
            
            public event plural2RowChangeEventHandler plural2RowChanged;
            
            public event plural2RowChangeEventHandler plural2RowDeleting;
            
            public event plural2RowChangeEventHandler plural2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addplural2Row(plural2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public plural2Row Addplural2Row(string meses, string anio, string pie, string asesor, string cantidad, string cantidadL, System.DateTime fecha, string id, string idCliente) {
                plural2Row rowplural2Row = ((plural2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        meses,
                        anio,
                        pie,
                        asesor,
                        cantidad,
                        cantidadL,
                        fecha,
                        id,
                        idCliente};
                rowplural2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowplural2Row);
                return rowplural2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                plural2DataTable cln = ((plural2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new plural2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnmeses = base.Columns["meses"];
                this.columnanio = base.Columns["anio"];
                this.columnpie = base.Columns["pie"];
                this.columnasesor = base.Columns["asesor"];
                this.columncantidad = base.Columns["cantidad"];
                this.columncantidadL = base.Columns["cantidadL"];
                this.columnfecha = base.Columns["fecha"];
                this.columnid = base.Columns["id"];
                this.columnidCliente = base.Columns["idCliente"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnmeses = new global::System.Data.DataColumn("meses", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmeses);
                this.columnanio = new global::System.Data.DataColumn("anio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnanio);
                this.columnpie = new global::System.Data.DataColumn("pie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpie);
                this.columnasesor = new global::System.Data.DataColumn("asesor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnasesor);
                this.columncantidad = new global::System.Data.DataColumn("cantidad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncantidad);
                this.columncantidadL = new global::System.Data.DataColumn("cantidadL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncantidadL);
                this.columnfecha = new global::System.Data.DataColumn("fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfecha);
                this.columnid = new global::System.Data.DataColumn("id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidCliente = new global::System.Data.DataColumn("idCliente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidCliente);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public plural2Row Newplural2Row() {
                return ((plural2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new plural2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(plural2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.plural2RowChanged != null)) {
                    this.plural2RowChanged(this, new plural2RowChangeEvent(((plural2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.plural2RowChanging != null)) {
                    this.plural2RowChanging(this, new plural2RowChangeEvent(((plural2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.plural2RowDeleted != null)) {
                    this.plural2RowDeleted(this, new plural2RowChangeEvent(((plural2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.plural2RowDeleting != null)) {
                    this.plural2RowDeleting(this, new plural2RowChangeEvent(((plural2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeplural2Row(plural2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dataCredito ds = new dataCredito();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "plural2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class datosPlural2DataTable : global::System.Data.TypedTableBase<datosPlural2Row> {
            
            private global::System.Data.DataColumn columnnombre;
            
            private global::System.Data.DataColumn columndireccion;
            
            private global::System.Data.DataColumn columndireccion2;
            
            private global::System.Data.DataColumn columnciudad;
            
            private global::System.Data.DataColumn columnmeses;
            
            private global::System.Data.DataColumn columnanio;
            
            private global::System.Data.DataColumn columnpie;
            
            private global::System.Data.DataColumn columnasesor;
            
            private global::System.Data.DataColumn columncantidad;
            
            private global::System.Data.DataColumn columncantidadL;
            
            private global::System.Data.DataColumn columnfecha;
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnidCliente;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosPlural2DataTable() {
                this.TableName = "datosPlural2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal datosPlural2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected datosPlural2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nombreColumn {
                get {
                    return this.columnnombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn direccionColumn {
                get {
                    return this.columndireccion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn direccion2Column {
                get {
                    return this.columndireccion2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ciudadColumn {
                get {
                    return this.columnciudad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mesesColumn {
                get {
                    return this.columnmeses;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn anioColumn {
                get {
                    return this.columnanio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pieColumn {
                get {
                    return this.columnpie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn asesorColumn {
                get {
                    return this.columnasesor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cantidadColumn {
                get {
                    return this.columncantidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cantidadLColumn {
                get {
                    return this.columncantidadL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fechaColumn {
                get {
                    return this.columnfecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idClienteColumn {
                get {
                    return this.columnidCliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosPlural2Row this[int index] {
                get {
                    return ((datosPlural2Row)(this.Rows[index]));
                }
            }
            
            public event datosPlural2RowChangeEventHandler datosPlural2RowChanging;
            
            public event datosPlural2RowChangeEventHandler datosPlural2RowChanged;
            
            public event datosPlural2RowChangeEventHandler datosPlural2RowDeleting;
            
            public event datosPlural2RowChangeEventHandler datosPlural2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddatosPlural2Row(datosPlural2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosPlural2Row AdddatosPlural2Row(string nombre, string direccion, string direccion2, string ciudad, string meses, string anio, string pie, string asesor, string cantidad, string cantidadL, System.DateTime fecha, string id, string idCliente) {
                datosPlural2Row rowdatosPlural2Row = ((datosPlural2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        nombre,
                        direccion,
                        direccion2,
                        ciudad,
                        meses,
                        anio,
                        pie,
                        asesor,
                        cantidad,
                        cantidadL,
                        fecha,
                        id,
                        idCliente};
                rowdatosPlural2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowdatosPlural2Row);
                return rowdatosPlural2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                datosPlural2DataTable cln = ((datosPlural2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new datosPlural2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnnombre = base.Columns["nombre"];
                this.columndireccion = base.Columns["direccion"];
                this.columndireccion2 = base.Columns["direccion2"];
                this.columnciudad = base.Columns["ciudad"];
                this.columnmeses = base.Columns["meses"];
                this.columnanio = base.Columns["anio"];
                this.columnpie = base.Columns["pie"];
                this.columnasesor = base.Columns["asesor"];
                this.columncantidad = base.Columns["cantidad"];
                this.columncantidadL = base.Columns["cantidadL"];
                this.columnfecha = base.Columns["fecha"];
                this.columnid = base.Columns["id"];
                this.columnidCliente = base.Columns["idCliente"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnnombre = new global::System.Data.DataColumn("nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnombre);
                this.columndireccion = new global::System.Data.DataColumn("direccion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndireccion);
                this.columndireccion2 = new global::System.Data.DataColumn("direccion2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndireccion2);
                this.columnciudad = new global::System.Data.DataColumn("ciudad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnciudad);
                this.columnmeses = new global::System.Data.DataColumn("meses", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmeses);
                this.columnanio = new global::System.Data.DataColumn("anio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnanio);
                this.columnpie = new global::System.Data.DataColumn("pie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpie);
                this.columnasesor = new global::System.Data.DataColumn("asesor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnasesor);
                this.columncantidad = new global::System.Data.DataColumn("cantidad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncantidad);
                this.columncantidadL = new global::System.Data.DataColumn("cantidadL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncantidadL);
                this.columnfecha = new global::System.Data.DataColumn("fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfecha);
                this.columnid = new global::System.Data.DataColumn("id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidCliente = new global::System.Data.DataColumn("idCliente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidCliente);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosPlural2Row NewdatosPlural2Row() {
                return ((datosPlural2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new datosPlural2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(datosPlural2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.datosPlural2RowChanged != null)) {
                    this.datosPlural2RowChanged(this, new datosPlural2RowChangeEvent(((datosPlural2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.datosPlural2RowChanging != null)) {
                    this.datosPlural2RowChanging(this, new datosPlural2RowChangeEvent(((datosPlural2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.datosPlural2RowDeleted != null)) {
                    this.datosPlural2RowDeleted(this, new datosPlural2RowChangeEvent(((datosPlural2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.datosPlural2RowDeleting != null)) {
                    this.datosPlural2RowDeleting(this, new datosPlural2RowChangeEvent(((datosPlural2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedatosPlural2Row(datosPlural2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dataCredito ds = new dataCredito();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "datosPlural2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class datosPlural1DataTable : global::System.Data.TypedTableBase<datosPlural1Row> {
            
            private global::System.Data.DataColumn columnnombre;
            
            private global::System.Data.DataColumn columndireccion;
            
            private global::System.Data.DataColumn columndireccion2;
            
            private global::System.Data.DataColumn columnciudad;
            
            private global::System.Data.DataColumn columnmeses;
            
            private global::System.Data.DataColumn columnanio;
            
            private global::System.Data.DataColumn columnpie;
            
            private global::System.Data.DataColumn columnasesor;
            
            private global::System.Data.DataColumn columncantidad;
            
            private global::System.Data.DataColumn columncantidadL;
            
            private global::System.Data.DataColumn columnfecha;
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnidCliente;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosPlural1DataTable() {
                this.TableName = "datosPlural1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal datosPlural1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected datosPlural1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nombreColumn {
                get {
                    return this.columnnombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn direccionColumn {
                get {
                    return this.columndireccion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn direccion2Column {
                get {
                    return this.columndireccion2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ciudadColumn {
                get {
                    return this.columnciudad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mesesColumn {
                get {
                    return this.columnmeses;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn anioColumn {
                get {
                    return this.columnanio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pieColumn {
                get {
                    return this.columnpie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn asesorColumn {
                get {
                    return this.columnasesor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cantidadColumn {
                get {
                    return this.columncantidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cantidadLColumn {
                get {
                    return this.columncantidadL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fechaColumn {
                get {
                    return this.columnfecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idClienteColumn {
                get {
                    return this.columnidCliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosPlural1Row this[int index] {
                get {
                    return ((datosPlural1Row)(this.Rows[index]));
                }
            }
            
            public event datosPlural1RowChangeEventHandler datosPlural1RowChanging;
            
            public event datosPlural1RowChangeEventHandler datosPlural1RowChanged;
            
            public event datosPlural1RowChangeEventHandler datosPlural1RowDeleting;
            
            public event datosPlural1RowChangeEventHandler datosPlural1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddatosPlural1Row(datosPlural1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosPlural1Row AdddatosPlural1Row(string nombre, string direccion, string direccion2, string ciudad, string meses, string anio, string pie, string asesor, string cantidad, string cantidadL, System.DateTime fecha, string id, string idCliente) {
                datosPlural1Row rowdatosPlural1Row = ((datosPlural1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        nombre,
                        direccion,
                        direccion2,
                        ciudad,
                        meses,
                        anio,
                        pie,
                        asesor,
                        cantidad,
                        cantidadL,
                        fecha,
                        id,
                        idCliente};
                rowdatosPlural1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowdatosPlural1Row);
                return rowdatosPlural1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                datosPlural1DataTable cln = ((datosPlural1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new datosPlural1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnnombre = base.Columns["nombre"];
                this.columndireccion = base.Columns["direccion"];
                this.columndireccion2 = base.Columns["direccion2"];
                this.columnciudad = base.Columns["ciudad"];
                this.columnmeses = base.Columns["meses"];
                this.columnanio = base.Columns["anio"];
                this.columnpie = base.Columns["pie"];
                this.columnasesor = base.Columns["asesor"];
                this.columncantidad = base.Columns["cantidad"];
                this.columncantidadL = base.Columns["cantidadL"];
                this.columnfecha = base.Columns["fecha"];
                this.columnid = base.Columns["id"];
                this.columnidCliente = base.Columns["idCliente"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnnombre = new global::System.Data.DataColumn("nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnombre);
                this.columndireccion = new global::System.Data.DataColumn("direccion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndireccion);
                this.columndireccion2 = new global::System.Data.DataColumn("direccion2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndireccion2);
                this.columnciudad = new global::System.Data.DataColumn("ciudad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnciudad);
                this.columnmeses = new global::System.Data.DataColumn("meses", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmeses);
                this.columnanio = new global::System.Data.DataColumn("anio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnanio);
                this.columnpie = new global::System.Data.DataColumn("pie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpie);
                this.columnasesor = new global::System.Data.DataColumn("asesor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnasesor);
                this.columncantidad = new global::System.Data.DataColumn("cantidad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncantidad);
                this.columncantidadL = new global::System.Data.DataColumn("cantidadL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncantidadL);
                this.columnfecha = new global::System.Data.DataColumn("fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfecha);
                this.columnid = new global::System.Data.DataColumn("id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidCliente = new global::System.Data.DataColumn("idCliente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidCliente);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosPlural1Row NewdatosPlural1Row() {
                return ((datosPlural1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new datosPlural1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(datosPlural1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.datosPlural1RowChanged != null)) {
                    this.datosPlural1RowChanged(this, new datosPlural1RowChangeEvent(((datosPlural1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.datosPlural1RowChanging != null)) {
                    this.datosPlural1RowChanging(this, new datosPlural1RowChangeEvent(((datosPlural1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.datosPlural1RowDeleted != null)) {
                    this.datosPlural1RowDeleted(this, new datosPlural1RowChangeEvent(((datosPlural1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.datosPlural1RowDeleting != null)) {
                    this.datosPlural1RowDeleting(this, new datosPlural1RowChangeEvent(((datosPlural1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedatosPlural1Row(datosPlural1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dataCredito ds = new dataCredito();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "datosPlural1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class datosPlural3DataTable : global::System.Data.TypedTableBase<datosPlural3Row> {
            
            private global::System.Data.DataColumn columnnombre;
            
            private global::System.Data.DataColumn columndireccion;
            
            private global::System.Data.DataColumn columndireccion2;
            
            private global::System.Data.DataColumn columnciudad;
            
            private global::System.Data.DataColumn columnmeses;
            
            private global::System.Data.DataColumn columnanio;
            
            private global::System.Data.DataColumn columnpie;
            
            private global::System.Data.DataColumn columnasesor;
            
            private global::System.Data.DataColumn columncantidad;
            
            private global::System.Data.DataColumn columncantidadL;
            
            private global::System.Data.DataColumn columnfecha;
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnidCliente;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosPlural3DataTable() {
                this.TableName = "datosPlural3";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal datosPlural3DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected datosPlural3DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nombreColumn {
                get {
                    return this.columnnombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn direccionColumn {
                get {
                    return this.columndireccion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn direccion2Column {
                get {
                    return this.columndireccion2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ciudadColumn {
                get {
                    return this.columnciudad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mesesColumn {
                get {
                    return this.columnmeses;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn anioColumn {
                get {
                    return this.columnanio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pieColumn {
                get {
                    return this.columnpie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn asesorColumn {
                get {
                    return this.columnasesor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cantidadColumn {
                get {
                    return this.columncantidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cantidadLColumn {
                get {
                    return this.columncantidadL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fechaColumn {
                get {
                    return this.columnfecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idClienteColumn {
                get {
                    return this.columnidCliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosPlural3Row this[int index] {
                get {
                    return ((datosPlural3Row)(this.Rows[index]));
                }
            }
            
            public event datosPlural3RowChangeEventHandler datosPlural3RowChanging;
            
            public event datosPlural3RowChangeEventHandler datosPlural3RowChanged;
            
            public event datosPlural3RowChangeEventHandler datosPlural3RowDeleting;
            
            public event datosPlural3RowChangeEventHandler datosPlural3RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddatosPlural3Row(datosPlural3Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosPlural3Row AdddatosPlural3Row(string nombre, string direccion, string direccion2, string ciudad, string meses, string anio, string pie, string asesor, string cantidad, string cantidadL, System.DateTime fecha, string id, string idCliente) {
                datosPlural3Row rowdatosPlural3Row = ((datosPlural3Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        nombre,
                        direccion,
                        direccion2,
                        ciudad,
                        meses,
                        anio,
                        pie,
                        asesor,
                        cantidad,
                        cantidadL,
                        fecha,
                        id,
                        idCliente};
                rowdatosPlural3Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowdatosPlural3Row);
                return rowdatosPlural3Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                datosPlural3DataTable cln = ((datosPlural3DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new datosPlural3DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnnombre = base.Columns["nombre"];
                this.columndireccion = base.Columns["direccion"];
                this.columndireccion2 = base.Columns["direccion2"];
                this.columnciudad = base.Columns["ciudad"];
                this.columnmeses = base.Columns["meses"];
                this.columnanio = base.Columns["anio"];
                this.columnpie = base.Columns["pie"];
                this.columnasesor = base.Columns["asesor"];
                this.columncantidad = base.Columns["cantidad"];
                this.columncantidadL = base.Columns["cantidadL"];
                this.columnfecha = base.Columns["fecha"];
                this.columnid = base.Columns["id"];
                this.columnidCliente = base.Columns["idCliente"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnnombre = new global::System.Data.DataColumn("nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnombre);
                this.columndireccion = new global::System.Data.DataColumn("direccion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndireccion);
                this.columndireccion2 = new global::System.Data.DataColumn("direccion2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndireccion2);
                this.columnciudad = new global::System.Data.DataColumn("ciudad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnciudad);
                this.columnmeses = new global::System.Data.DataColumn("meses", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmeses);
                this.columnanio = new global::System.Data.DataColumn("anio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnanio);
                this.columnpie = new global::System.Data.DataColumn("pie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpie);
                this.columnasesor = new global::System.Data.DataColumn("asesor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnasesor);
                this.columncantidad = new global::System.Data.DataColumn("cantidad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncantidad);
                this.columncantidadL = new global::System.Data.DataColumn("cantidadL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncantidadL);
                this.columnfecha = new global::System.Data.DataColumn("fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfecha);
                this.columnid = new global::System.Data.DataColumn("id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidCliente = new global::System.Data.DataColumn("idCliente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidCliente);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosPlural3Row NewdatosPlural3Row() {
                return ((datosPlural3Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new datosPlural3Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(datosPlural3Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.datosPlural3RowChanged != null)) {
                    this.datosPlural3RowChanged(this, new datosPlural3RowChangeEvent(((datosPlural3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.datosPlural3RowChanging != null)) {
                    this.datosPlural3RowChanging(this, new datosPlural3RowChangeEvent(((datosPlural3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.datosPlural3RowDeleted != null)) {
                    this.datosPlural3RowDeleted(this, new datosPlural3RowChangeEvent(((datosPlural3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.datosPlural3RowDeleting != null)) {
                    this.datosPlural3RowDeleting(this, new datosPlural3RowChangeEvent(((datosPlural3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedatosPlural3Row(datosPlural3Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dataCredito ds = new dataCredito();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "datosPlural3DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class datosSing1DataTable : global::System.Data.TypedTableBase<datosSing1Row> {
            
            private global::System.Data.DataColumn columnnombre;
            
            private global::System.Data.DataColumn columndireccion;
            
            private global::System.Data.DataColumn columndireccion2;
            
            private global::System.Data.DataColumn columnciudad;
            
            private global::System.Data.DataColumn columnencabezado;
            
            private global::System.Data.DataColumn columnsaludo;
            
            private global::System.Data.DataColumn columnmeses;
            
            private global::System.Data.DataColumn columnanio;
            
            private global::System.Data.DataColumn columnpie;
            
            private global::System.Data.DataColumn columnasesor;
            
            private global::System.Data.DataColumn columncantidad;
            
            private global::System.Data.DataColumn columncantidadL;
            
            private global::System.Data.DataColumn columnfecha;
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnidCliente;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosSing1DataTable() {
                this.TableName = "datosSing1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal datosSing1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected datosSing1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nombreColumn {
                get {
                    return this.columnnombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn direccionColumn {
                get {
                    return this.columndireccion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn direccion2Column {
                get {
                    return this.columndireccion2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ciudadColumn {
                get {
                    return this.columnciudad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn encabezadoColumn {
                get {
                    return this.columnencabezado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn saludoColumn {
                get {
                    return this.columnsaludo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mesesColumn {
                get {
                    return this.columnmeses;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn anioColumn {
                get {
                    return this.columnanio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pieColumn {
                get {
                    return this.columnpie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn asesorColumn {
                get {
                    return this.columnasesor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cantidadColumn {
                get {
                    return this.columncantidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cantidadLColumn {
                get {
                    return this.columncantidadL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fechaColumn {
                get {
                    return this.columnfecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idClienteColumn {
                get {
                    return this.columnidCliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosSing1Row this[int index] {
                get {
                    return ((datosSing1Row)(this.Rows[index]));
                }
            }
            
            public event datosSing1RowChangeEventHandler datosSing1RowChanging;
            
            public event datosSing1RowChangeEventHandler datosSing1RowChanged;
            
            public event datosSing1RowChangeEventHandler datosSing1RowDeleting;
            
            public event datosSing1RowChangeEventHandler datosSing1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddatosSing1Row(datosSing1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosSing1Row AdddatosSing1Row(string nombre, string direccion, string direccion2, string ciudad, string encabezado, string saludo, string meses, string anio, string pie, string asesor, string cantidad, string cantidadL, System.DateTime fecha, string id, string idCliente) {
                datosSing1Row rowdatosSing1Row = ((datosSing1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        nombre,
                        direccion,
                        direccion2,
                        ciudad,
                        encabezado,
                        saludo,
                        meses,
                        anio,
                        pie,
                        asesor,
                        cantidad,
                        cantidadL,
                        fecha,
                        id,
                        idCliente};
                rowdatosSing1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowdatosSing1Row);
                return rowdatosSing1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                datosSing1DataTable cln = ((datosSing1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new datosSing1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnnombre = base.Columns["nombre"];
                this.columndireccion = base.Columns["direccion"];
                this.columndireccion2 = base.Columns["direccion2"];
                this.columnciudad = base.Columns["ciudad"];
                this.columnencabezado = base.Columns["encabezado"];
                this.columnsaludo = base.Columns["saludo"];
                this.columnmeses = base.Columns["meses"];
                this.columnanio = base.Columns["anio"];
                this.columnpie = base.Columns["pie"];
                this.columnasesor = base.Columns["asesor"];
                this.columncantidad = base.Columns["cantidad"];
                this.columncantidadL = base.Columns["cantidadL"];
                this.columnfecha = base.Columns["fecha"];
                this.columnid = base.Columns["id"];
                this.columnidCliente = base.Columns["idCliente"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnnombre = new global::System.Data.DataColumn("nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnombre);
                this.columndireccion = new global::System.Data.DataColumn("direccion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndireccion);
                this.columndireccion2 = new global::System.Data.DataColumn("direccion2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndireccion2);
                this.columnciudad = new global::System.Data.DataColumn("ciudad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnciudad);
                this.columnencabezado = new global::System.Data.DataColumn("encabezado", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnencabezado);
                this.columnsaludo = new global::System.Data.DataColumn("saludo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsaludo);
                this.columnmeses = new global::System.Data.DataColumn("meses", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmeses);
                this.columnanio = new global::System.Data.DataColumn("anio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnanio);
                this.columnpie = new global::System.Data.DataColumn("pie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpie);
                this.columnasesor = new global::System.Data.DataColumn("asesor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnasesor);
                this.columncantidad = new global::System.Data.DataColumn("cantidad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncantidad);
                this.columncantidadL = new global::System.Data.DataColumn("cantidadL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncantidadL);
                this.columnfecha = new global::System.Data.DataColumn("fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfecha);
                this.columnid = new global::System.Data.DataColumn("id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidCliente = new global::System.Data.DataColumn("idCliente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidCliente);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosSing1Row NewdatosSing1Row() {
                return ((datosSing1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new datosSing1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(datosSing1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.datosSing1RowChanged != null)) {
                    this.datosSing1RowChanged(this, new datosSing1RowChangeEvent(((datosSing1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.datosSing1RowChanging != null)) {
                    this.datosSing1RowChanging(this, new datosSing1RowChangeEvent(((datosSing1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.datosSing1RowDeleted != null)) {
                    this.datosSing1RowDeleted(this, new datosSing1RowChangeEvent(((datosSing1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.datosSing1RowDeleting != null)) {
                    this.datosSing1RowDeleting(this, new datosSing1RowChangeEvent(((datosSing1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedatosSing1Row(datosSing1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dataCredito ds = new dataCredito();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "datosSing1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class datosSing3DataTable : global::System.Data.TypedTableBase<datosSing3Row> {
            
            private global::System.Data.DataColumn columnnombre;
            
            private global::System.Data.DataColumn columndireccion;
            
            private global::System.Data.DataColumn columndireccion2;
            
            private global::System.Data.DataColumn columnciudad;
            
            private global::System.Data.DataColumn columnencabezado;
            
            private global::System.Data.DataColumn columnsaludo;
            
            private global::System.Data.DataColumn columnmeses;
            
            private global::System.Data.DataColumn columnanio;
            
            private global::System.Data.DataColumn columnpie;
            
            private global::System.Data.DataColumn columnasesor;
            
            private global::System.Data.DataColumn columncantidad;
            
            private global::System.Data.DataColumn columncantidadL;
            
            private global::System.Data.DataColumn columnfecha;
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnidCliente;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosSing3DataTable() {
                this.TableName = "datosSing3";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal datosSing3DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected datosSing3DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nombreColumn {
                get {
                    return this.columnnombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn direccionColumn {
                get {
                    return this.columndireccion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn direccion2Column {
                get {
                    return this.columndireccion2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ciudadColumn {
                get {
                    return this.columnciudad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn encabezadoColumn {
                get {
                    return this.columnencabezado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn saludoColumn {
                get {
                    return this.columnsaludo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mesesColumn {
                get {
                    return this.columnmeses;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn anioColumn {
                get {
                    return this.columnanio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pieColumn {
                get {
                    return this.columnpie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn asesorColumn {
                get {
                    return this.columnasesor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cantidadColumn {
                get {
                    return this.columncantidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cantidadLColumn {
                get {
                    return this.columncantidadL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fechaColumn {
                get {
                    return this.columnfecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idClienteColumn {
                get {
                    return this.columnidCliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosSing3Row this[int index] {
                get {
                    return ((datosSing3Row)(this.Rows[index]));
                }
            }
            
            public event datosSing3RowChangeEventHandler datosSing3RowChanging;
            
            public event datosSing3RowChangeEventHandler datosSing3RowChanged;
            
            public event datosSing3RowChangeEventHandler datosSing3RowDeleting;
            
            public event datosSing3RowChangeEventHandler datosSing3RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddatosSing3Row(datosSing3Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosSing3Row AdddatosSing3Row(string nombre, string direccion, string direccion2, string ciudad, string encabezado, string saludo, string meses, string anio, string pie, string asesor, string cantidad, string cantidadL, System.DateTime fecha, string id, string idCliente) {
                datosSing3Row rowdatosSing3Row = ((datosSing3Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        nombre,
                        direccion,
                        direccion2,
                        ciudad,
                        encabezado,
                        saludo,
                        meses,
                        anio,
                        pie,
                        asesor,
                        cantidad,
                        cantidadL,
                        fecha,
                        id,
                        idCliente};
                rowdatosSing3Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowdatosSing3Row);
                return rowdatosSing3Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                datosSing3DataTable cln = ((datosSing3DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new datosSing3DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnnombre = base.Columns["nombre"];
                this.columndireccion = base.Columns["direccion"];
                this.columndireccion2 = base.Columns["direccion2"];
                this.columnciudad = base.Columns["ciudad"];
                this.columnencabezado = base.Columns["encabezado"];
                this.columnsaludo = base.Columns["saludo"];
                this.columnmeses = base.Columns["meses"];
                this.columnanio = base.Columns["anio"];
                this.columnpie = base.Columns["pie"];
                this.columnasesor = base.Columns["asesor"];
                this.columncantidad = base.Columns["cantidad"];
                this.columncantidadL = base.Columns["cantidadL"];
                this.columnfecha = base.Columns["fecha"];
                this.columnid = base.Columns["id"];
                this.columnidCliente = base.Columns["idCliente"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnnombre = new global::System.Data.DataColumn("nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnombre);
                this.columndireccion = new global::System.Data.DataColumn("direccion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndireccion);
                this.columndireccion2 = new global::System.Data.DataColumn("direccion2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndireccion2);
                this.columnciudad = new global::System.Data.DataColumn("ciudad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnciudad);
                this.columnencabezado = new global::System.Data.DataColumn("encabezado", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnencabezado);
                this.columnsaludo = new global::System.Data.DataColumn("saludo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsaludo);
                this.columnmeses = new global::System.Data.DataColumn("meses", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmeses);
                this.columnanio = new global::System.Data.DataColumn("anio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnanio);
                this.columnpie = new global::System.Data.DataColumn("pie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpie);
                this.columnasesor = new global::System.Data.DataColumn("asesor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnasesor);
                this.columncantidad = new global::System.Data.DataColumn("cantidad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncantidad);
                this.columncantidadL = new global::System.Data.DataColumn("cantidadL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncantidadL);
                this.columnfecha = new global::System.Data.DataColumn("fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfecha);
                this.columnid = new global::System.Data.DataColumn("id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidCliente = new global::System.Data.DataColumn("idCliente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidCliente);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosSing3Row NewdatosSing3Row() {
                return ((datosSing3Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new datosSing3Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(datosSing3Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.datosSing3RowChanged != null)) {
                    this.datosSing3RowChanged(this, new datosSing3RowChangeEvent(((datosSing3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.datosSing3RowChanging != null)) {
                    this.datosSing3RowChanging(this, new datosSing3RowChangeEvent(((datosSing3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.datosSing3RowDeleted != null)) {
                    this.datosSing3RowDeleted(this, new datosSing3RowChangeEvent(((datosSing3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.datosSing3RowDeleting != null)) {
                    this.datosSing3RowDeleting(this, new datosSing3RowChangeEvent(((datosSing3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedatosSing3Row(datosSing3Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dataCredito ds = new dataCredito();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "datosSing3DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class datosSing4DataTable : global::System.Data.TypedTableBase<datosSing4Row> {
            
            private global::System.Data.DataColumn columnnombre;
            
            private global::System.Data.DataColumn columndireccion;
            
            private global::System.Data.DataColumn columndireccion2;
            
            private global::System.Data.DataColumn columnciudad;
            
            private global::System.Data.DataColumn columnencabezado;
            
            private global::System.Data.DataColumn columnsaludo;
            
            private global::System.Data.DataColumn columnpie;
            
            private global::System.Data.DataColumn columnasesor;
            
            private global::System.Data.DataColumn columnfecha;
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnidCliente;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosSing4DataTable() {
                this.TableName = "datosSing4";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal datosSing4DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected datosSing4DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nombreColumn {
                get {
                    return this.columnnombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn direccionColumn {
                get {
                    return this.columndireccion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn direccion2Column {
                get {
                    return this.columndireccion2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ciudadColumn {
                get {
                    return this.columnciudad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn encabezadoColumn {
                get {
                    return this.columnencabezado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn saludoColumn {
                get {
                    return this.columnsaludo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pieColumn {
                get {
                    return this.columnpie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn asesorColumn {
                get {
                    return this.columnasesor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fechaColumn {
                get {
                    return this.columnfecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idClienteColumn {
                get {
                    return this.columnidCliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosSing4Row this[int index] {
                get {
                    return ((datosSing4Row)(this.Rows[index]));
                }
            }
            
            public event datosSing4RowChangeEventHandler datosSing4RowChanging;
            
            public event datosSing4RowChangeEventHandler datosSing4RowChanged;
            
            public event datosSing4RowChangeEventHandler datosSing4RowDeleting;
            
            public event datosSing4RowChangeEventHandler datosSing4RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddatosSing4Row(datosSing4Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosSing4Row AdddatosSing4Row(string nombre, string direccion, string direccion2, string ciudad, string encabezado, string saludo, string pie, string asesor, System.DateTime fecha, string id, string idCliente) {
                datosSing4Row rowdatosSing4Row = ((datosSing4Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        nombre,
                        direccion,
                        direccion2,
                        ciudad,
                        encabezado,
                        saludo,
                        pie,
                        asesor,
                        fecha,
                        id,
                        idCliente};
                rowdatosSing4Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowdatosSing4Row);
                return rowdatosSing4Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                datosSing4DataTable cln = ((datosSing4DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new datosSing4DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnnombre = base.Columns["nombre"];
                this.columndireccion = base.Columns["direccion"];
                this.columndireccion2 = base.Columns["direccion2"];
                this.columnciudad = base.Columns["ciudad"];
                this.columnencabezado = base.Columns["encabezado"];
                this.columnsaludo = base.Columns["saludo"];
                this.columnpie = base.Columns["pie"];
                this.columnasesor = base.Columns["asesor"];
                this.columnfecha = base.Columns["fecha"];
                this.columnid = base.Columns["id"];
                this.columnidCliente = base.Columns["idCliente"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnnombre = new global::System.Data.DataColumn("nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnombre);
                this.columndireccion = new global::System.Data.DataColumn("direccion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndireccion);
                this.columndireccion2 = new global::System.Data.DataColumn("direccion2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndireccion2);
                this.columnciudad = new global::System.Data.DataColumn("ciudad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnciudad);
                this.columnencabezado = new global::System.Data.DataColumn("encabezado", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnencabezado);
                this.columnsaludo = new global::System.Data.DataColumn("saludo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsaludo);
                this.columnpie = new global::System.Data.DataColumn("pie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpie);
                this.columnasesor = new global::System.Data.DataColumn("asesor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnasesor);
                this.columnfecha = new global::System.Data.DataColumn("fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfecha);
                this.columnid = new global::System.Data.DataColumn("id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidCliente = new global::System.Data.DataColumn("idCliente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidCliente);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosSing4Row NewdatosSing4Row() {
                return ((datosSing4Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new datosSing4Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(datosSing4Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.datosSing4RowChanged != null)) {
                    this.datosSing4RowChanged(this, new datosSing4RowChangeEvent(((datosSing4Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.datosSing4RowChanging != null)) {
                    this.datosSing4RowChanging(this, new datosSing4RowChangeEvent(((datosSing4Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.datosSing4RowDeleted != null)) {
                    this.datosSing4RowDeleted(this, new datosSing4RowChangeEvent(((datosSing4Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.datosSing4RowDeleting != null)) {
                    this.datosSing4RowDeleting(this, new datosSing4RowChangeEvent(((datosSing4Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedatosSing4Row(datosSing4Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dataCredito ds = new dataCredito();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "datosSing4DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class datosSing5DataTable : global::System.Data.TypedTableBase<datosSing5Row> {
            
            private global::System.Data.DataColumn columnnombre;
            
            private global::System.Data.DataColumn columndireccion;
            
            private global::System.Data.DataColumn columndireccion2;
            
            private global::System.Data.DataColumn columnciudad;
            
            private global::System.Data.DataColumn columnencabezado;
            
            private global::System.Data.DataColumn columnsaludo;
            
            private global::System.Data.DataColumn columnpie;
            
            private global::System.Data.DataColumn columnasesor;
            
            private global::System.Data.DataColumn columncantidad;
            
            private global::System.Data.DataColumn columnfecha;
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnidCliente;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosSing5DataTable() {
                this.TableName = "datosSing5";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal datosSing5DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected datosSing5DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nombreColumn {
                get {
                    return this.columnnombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn direccionColumn {
                get {
                    return this.columndireccion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn direccion2Column {
                get {
                    return this.columndireccion2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ciudadColumn {
                get {
                    return this.columnciudad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn encabezadoColumn {
                get {
                    return this.columnencabezado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn saludoColumn {
                get {
                    return this.columnsaludo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pieColumn {
                get {
                    return this.columnpie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn asesorColumn {
                get {
                    return this.columnasesor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cantidadColumn {
                get {
                    return this.columncantidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fechaColumn {
                get {
                    return this.columnfecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idClienteColumn {
                get {
                    return this.columnidCliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosSing5Row this[int index] {
                get {
                    return ((datosSing5Row)(this.Rows[index]));
                }
            }
            
            public event datosSing5RowChangeEventHandler datosSing5RowChanging;
            
            public event datosSing5RowChangeEventHandler datosSing5RowChanged;
            
            public event datosSing5RowChangeEventHandler datosSing5RowDeleting;
            
            public event datosSing5RowChangeEventHandler datosSing5RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddatosSing5Row(datosSing5Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosSing5Row AdddatosSing5Row(string nombre, string direccion, string direccion2, string ciudad, string encabezado, string saludo, string pie, string asesor, string cantidad, System.DateTime fecha, string id, string idCliente) {
                datosSing5Row rowdatosSing5Row = ((datosSing5Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        nombre,
                        direccion,
                        direccion2,
                        ciudad,
                        encabezado,
                        saludo,
                        pie,
                        asesor,
                        cantidad,
                        fecha,
                        id,
                        idCliente};
                rowdatosSing5Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowdatosSing5Row);
                return rowdatosSing5Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                datosSing5DataTable cln = ((datosSing5DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new datosSing5DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnnombre = base.Columns["nombre"];
                this.columndireccion = base.Columns["direccion"];
                this.columndireccion2 = base.Columns["direccion2"];
                this.columnciudad = base.Columns["ciudad"];
                this.columnencabezado = base.Columns["encabezado"];
                this.columnsaludo = base.Columns["saludo"];
                this.columnpie = base.Columns["pie"];
                this.columnasesor = base.Columns["asesor"];
                this.columncantidad = base.Columns["cantidad"];
                this.columnfecha = base.Columns["fecha"];
                this.columnid = base.Columns["id"];
                this.columnidCliente = base.Columns["idCliente"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnnombre = new global::System.Data.DataColumn("nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnombre);
                this.columndireccion = new global::System.Data.DataColumn("direccion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndireccion);
                this.columndireccion2 = new global::System.Data.DataColumn("direccion2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndireccion2);
                this.columnciudad = new global::System.Data.DataColumn("ciudad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnciudad);
                this.columnencabezado = new global::System.Data.DataColumn("encabezado", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnencabezado);
                this.columnsaludo = new global::System.Data.DataColumn("saludo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsaludo);
                this.columnpie = new global::System.Data.DataColumn("pie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpie);
                this.columnasesor = new global::System.Data.DataColumn("asesor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnasesor);
                this.columncantidad = new global::System.Data.DataColumn("cantidad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncantidad);
                this.columnfecha = new global::System.Data.DataColumn("fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfecha);
                this.columnid = new global::System.Data.DataColumn("id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidCliente = new global::System.Data.DataColumn("idCliente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidCliente);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosSing5Row NewdatosSing5Row() {
                return ((datosSing5Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new datosSing5Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(datosSing5Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.datosSing5RowChanged != null)) {
                    this.datosSing5RowChanged(this, new datosSing5RowChangeEvent(((datosSing5Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.datosSing5RowChanging != null)) {
                    this.datosSing5RowChanging(this, new datosSing5RowChangeEvent(((datosSing5Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.datosSing5RowDeleted != null)) {
                    this.datosSing5RowDeleted(this, new datosSing5RowChangeEvent(((datosSing5Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.datosSing5RowDeleting != null)) {
                    this.datosSing5RowDeleting(this, new datosSing5RowChangeEvent(((datosSing5Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedatosSing5Row(datosSing5Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dataCredito ds = new dataCredito();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "datosSing5DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class datosPlural4DataTable : global::System.Data.TypedTableBase<datosPlural4Row> {
            
            private global::System.Data.DataColumn columnnombre;
            
            private global::System.Data.DataColumn columndireccion;
            
            private global::System.Data.DataColumn columndireccion2;
            
            private global::System.Data.DataColumn columnciudad;
            
            private global::System.Data.DataColumn columnpie;
            
            private global::System.Data.DataColumn columnasesor;
            
            private global::System.Data.DataColumn columnfecha;
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnidCliente;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosPlural4DataTable() {
                this.TableName = "datosPlural4";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal datosPlural4DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected datosPlural4DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nombreColumn {
                get {
                    return this.columnnombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn direccionColumn {
                get {
                    return this.columndireccion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn direccion2Column {
                get {
                    return this.columndireccion2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ciudadColumn {
                get {
                    return this.columnciudad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pieColumn {
                get {
                    return this.columnpie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn asesorColumn {
                get {
                    return this.columnasesor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fechaColumn {
                get {
                    return this.columnfecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idClienteColumn {
                get {
                    return this.columnidCliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosPlural4Row this[int index] {
                get {
                    return ((datosPlural4Row)(this.Rows[index]));
                }
            }
            
            public event datosPlural4RowChangeEventHandler datosPlural4RowChanging;
            
            public event datosPlural4RowChangeEventHandler datosPlural4RowChanged;
            
            public event datosPlural4RowChangeEventHandler datosPlural4RowDeleting;
            
            public event datosPlural4RowChangeEventHandler datosPlural4RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddatosPlural4Row(datosPlural4Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosPlural4Row AdddatosPlural4Row(string nombre, string direccion, string direccion2, string ciudad, string pie, string asesor, System.DateTime fecha, string id, string idCliente) {
                datosPlural4Row rowdatosPlural4Row = ((datosPlural4Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        nombre,
                        direccion,
                        direccion2,
                        ciudad,
                        pie,
                        asesor,
                        fecha,
                        id,
                        idCliente};
                rowdatosPlural4Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowdatosPlural4Row);
                return rowdatosPlural4Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                datosPlural4DataTable cln = ((datosPlural4DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new datosPlural4DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnnombre = base.Columns["nombre"];
                this.columndireccion = base.Columns["direccion"];
                this.columndireccion2 = base.Columns["direccion2"];
                this.columnciudad = base.Columns["ciudad"];
                this.columnpie = base.Columns["pie"];
                this.columnasesor = base.Columns["asesor"];
                this.columnfecha = base.Columns["fecha"];
                this.columnid = base.Columns["id"];
                this.columnidCliente = base.Columns["idCliente"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnnombre = new global::System.Data.DataColumn("nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnombre);
                this.columndireccion = new global::System.Data.DataColumn("direccion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndireccion);
                this.columndireccion2 = new global::System.Data.DataColumn("direccion2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndireccion2);
                this.columnciudad = new global::System.Data.DataColumn("ciudad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnciudad);
                this.columnpie = new global::System.Data.DataColumn("pie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpie);
                this.columnasesor = new global::System.Data.DataColumn("asesor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnasesor);
                this.columnfecha = new global::System.Data.DataColumn("fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfecha);
                this.columnid = new global::System.Data.DataColumn("id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidCliente = new global::System.Data.DataColumn("idCliente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidCliente);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosPlural4Row NewdatosPlural4Row() {
                return ((datosPlural4Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new datosPlural4Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(datosPlural4Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.datosPlural4RowChanged != null)) {
                    this.datosPlural4RowChanged(this, new datosPlural4RowChangeEvent(((datosPlural4Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.datosPlural4RowChanging != null)) {
                    this.datosPlural4RowChanging(this, new datosPlural4RowChangeEvent(((datosPlural4Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.datosPlural4RowDeleted != null)) {
                    this.datosPlural4RowDeleted(this, new datosPlural4RowChangeEvent(((datosPlural4Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.datosPlural4RowDeleting != null)) {
                    this.datosPlural4RowDeleting(this, new datosPlural4RowChangeEvent(((datosPlural4Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedatosPlural4Row(datosPlural4Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dataCredito ds = new dataCredito();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "datosPlural4DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class datosPlural5DataTable : global::System.Data.TypedTableBase<datosPlural5Row> {
            
            private global::System.Data.DataColumn columnnombre;
            
            private global::System.Data.DataColumn columndireccion;
            
            private global::System.Data.DataColumn columndireccion2;
            
            private global::System.Data.DataColumn columnciudad;
            
            private global::System.Data.DataColumn columnpie;
            
            private global::System.Data.DataColumn columnasesor;
            
            private global::System.Data.DataColumn columncantidad;
            
            private global::System.Data.DataColumn columnfecha;
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnidCliente;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosPlural5DataTable() {
                this.TableName = "datosPlural5";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal datosPlural5DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected datosPlural5DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nombreColumn {
                get {
                    return this.columnnombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn direccionColumn {
                get {
                    return this.columndireccion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn direccion2Column {
                get {
                    return this.columndireccion2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ciudadColumn {
                get {
                    return this.columnciudad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pieColumn {
                get {
                    return this.columnpie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn asesorColumn {
                get {
                    return this.columnasesor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cantidadColumn {
                get {
                    return this.columncantidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fechaColumn {
                get {
                    return this.columnfecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idClienteColumn {
                get {
                    return this.columnidCliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosPlural5Row this[int index] {
                get {
                    return ((datosPlural5Row)(this.Rows[index]));
                }
            }
            
            public event datosPlural5RowChangeEventHandler datosPlural5RowChanging;
            
            public event datosPlural5RowChangeEventHandler datosPlural5RowChanged;
            
            public event datosPlural5RowChangeEventHandler datosPlural5RowDeleting;
            
            public event datosPlural5RowChangeEventHandler datosPlural5RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddatosPlural5Row(datosPlural5Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosPlural5Row AdddatosPlural5Row(string nombre, string direccion, string direccion2, string ciudad, string pie, string asesor, string cantidad, System.DateTime fecha, string id, string idCliente) {
                datosPlural5Row rowdatosPlural5Row = ((datosPlural5Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        nombre,
                        direccion,
                        direccion2,
                        ciudad,
                        pie,
                        asesor,
                        cantidad,
                        fecha,
                        id,
                        idCliente};
                rowdatosPlural5Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowdatosPlural5Row);
                return rowdatosPlural5Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                datosPlural5DataTable cln = ((datosPlural5DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new datosPlural5DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnnombre = base.Columns["nombre"];
                this.columndireccion = base.Columns["direccion"];
                this.columndireccion2 = base.Columns["direccion2"];
                this.columnciudad = base.Columns["ciudad"];
                this.columnpie = base.Columns["pie"];
                this.columnasesor = base.Columns["asesor"];
                this.columncantidad = base.Columns["cantidad"];
                this.columnfecha = base.Columns["fecha"];
                this.columnid = base.Columns["id"];
                this.columnidCliente = base.Columns["idCliente"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnnombre = new global::System.Data.DataColumn("nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnombre);
                this.columndireccion = new global::System.Data.DataColumn("direccion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndireccion);
                this.columndireccion2 = new global::System.Data.DataColumn("direccion2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndireccion2);
                this.columnciudad = new global::System.Data.DataColumn("ciudad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnciudad);
                this.columnpie = new global::System.Data.DataColumn("pie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpie);
                this.columnasesor = new global::System.Data.DataColumn("asesor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnasesor);
                this.columncantidad = new global::System.Data.DataColumn("cantidad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncantidad);
                this.columnfecha = new global::System.Data.DataColumn("fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfecha);
                this.columnid = new global::System.Data.DataColumn("id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidCliente = new global::System.Data.DataColumn("idCliente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidCliente);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosPlural5Row NewdatosPlural5Row() {
                return ((datosPlural5Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new datosPlural5Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(datosPlural5Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.datosPlural5RowChanged != null)) {
                    this.datosPlural5RowChanged(this, new datosPlural5RowChangeEvent(((datosPlural5Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.datosPlural5RowChanging != null)) {
                    this.datosPlural5RowChanging(this, new datosPlural5RowChangeEvent(((datosPlural5Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.datosPlural5RowDeleted != null)) {
                    this.datosPlural5RowDeleted(this, new datosPlural5RowChangeEvent(((datosPlural5Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.datosPlural5RowDeleting != null)) {
                    this.datosPlural5RowDeleting(this, new datosPlural5RowChangeEvent(((datosPlural5Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedatosPlural5Row(datosPlural5Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dataCredito ds = new dataCredito();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "datosPlural5DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class sing4DataTable : global::System.Data.TypedTableBase<sing4Row> {
            
            private global::System.Data.DataColumn columnencabezado;
            
            private global::System.Data.DataColumn columnsaludo;
            
            private global::System.Data.DataColumn columnpie;
            
            private global::System.Data.DataColumn columnasesor;
            
            private global::System.Data.DataColumn columnfecha;
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnidCliente;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sing4DataTable() {
                this.TableName = "sing4";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sing4DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected sing4DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn encabezadoColumn {
                get {
                    return this.columnencabezado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn saludoColumn {
                get {
                    return this.columnsaludo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pieColumn {
                get {
                    return this.columnpie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn asesorColumn {
                get {
                    return this.columnasesor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fechaColumn {
                get {
                    return this.columnfecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idClienteColumn {
                get {
                    return this.columnidCliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sing4Row this[int index] {
                get {
                    return ((sing4Row)(this.Rows[index]));
                }
            }
            
            public event sing4RowChangeEventHandler sing4RowChanging;
            
            public event sing4RowChangeEventHandler sing4RowChanged;
            
            public event sing4RowChangeEventHandler sing4RowDeleting;
            
            public event sing4RowChangeEventHandler sing4RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addsing4Row(sing4Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sing4Row Addsing4Row(string encabezado, string saludo, string pie, string asesor, System.DateTime fecha, string id, string idCliente) {
                sing4Row rowsing4Row = ((sing4Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        encabezado,
                        saludo,
                        pie,
                        asesor,
                        fecha,
                        id,
                        idCliente};
                rowsing4Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowsing4Row);
                return rowsing4Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                sing4DataTable cln = ((sing4DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new sing4DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnencabezado = base.Columns["encabezado"];
                this.columnsaludo = base.Columns["saludo"];
                this.columnpie = base.Columns["pie"];
                this.columnasesor = base.Columns["asesor"];
                this.columnfecha = base.Columns["fecha"];
                this.columnid = base.Columns["id"];
                this.columnidCliente = base.Columns["idCliente"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnencabezado = new global::System.Data.DataColumn("encabezado", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnencabezado);
                this.columnsaludo = new global::System.Data.DataColumn("saludo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsaludo);
                this.columnpie = new global::System.Data.DataColumn("pie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpie);
                this.columnasesor = new global::System.Data.DataColumn("asesor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnasesor);
                this.columnfecha = new global::System.Data.DataColumn("fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfecha);
                this.columnid = new global::System.Data.DataColumn("id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidCliente = new global::System.Data.DataColumn("idCliente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidCliente);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sing4Row Newsing4Row() {
                return ((sing4Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new sing4Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(sing4Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sing4RowChanged != null)) {
                    this.sing4RowChanged(this, new sing4RowChangeEvent(((sing4Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sing4RowChanging != null)) {
                    this.sing4RowChanging(this, new sing4RowChangeEvent(((sing4Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sing4RowDeleted != null)) {
                    this.sing4RowDeleted(this, new sing4RowChangeEvent(((sing4Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sing4RowDeleting != null)) {
                    this.sing4RowDeleting(this, new sing4RowChangeEvent(((sing4Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removesing4Row(sing4Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dataCredito ds = new dataCredito();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "sing4DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class sing5DataTable : global::System.Data.TypedTableBase<sing5Row> {
            
            private global::System.Data.DataColumn columnencabezado;
            
            private global::System.Data.DataColumn columnsaludo;
            
            private global::System.Data.DataColumn columnpie;
            
            private global::System.Data.DataColumn columnasesor;
            
            private global::System.Data.DataColumn columncantidad;
            
            private global::System.Data.DataColumn columnfecha;
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnidCliente;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sing5DataTable() {
                this.TableName = "sing5";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sing5DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected sing5DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn encabezadoColumn {
                get {
                    return this.columnencabezado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn saludoColumn {
                get {
                    return this.columnsaludo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pieColumn {
                get {
                    return this.columnpie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn asesorColumn {
                get {
                    return this.columnasesor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cantidadColumn {
                get {
                    return this.columncantidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fechaColumn {
                get {
                    return this.columnfecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idClienteColumn {
                get {
                    return this.columnidCliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sing5Row this[int index] {
                get {
                    return ((sing5Row)(this.Rows[index]));
                }
            }
            
            public event sing5RowChangeEventHandler sing5RowChanging;
            
            public event sing5RowChangeEventHandler sing5RowChanged;
            
            public event sing5RowChangeEventHandler sing5RowDeleting;
            
            public event sing5RowChangeEventHandler sing5RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addsing5Row(sing5Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sing5Row Addsing5Row(string encabezado, string saludo, string pie, string asesor, string cantidad, System.DateTime fecha, string id, string idCliente) {
                sing5Row rowsing5Row = ((sing5Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        encabezado,
                        saludo,
                        pie,
                        asesor,
                        cantidad,
                        fecha,
                        id,
                        idCliente};
                rowsing5Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowsing5Row);
                return rowsing5Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                sing5DataTable cln = ((sing5DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new sing5DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnencabezado = base.Columns["encabezado"];
                this.columnsaludo = base.Columns["saludo"];
                this.columnpie = base.Columns["pie"];
                this.columnasesor = base.Columns["asesor"];
                this.columncantidad = base.Columns["cantidad"];
                this.columnfecha = base.Columns["fecha"];
                this.columnid = base.Columns["id"];
                this.columnidCliente = base.Columns["idCliente"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnencabezado = new global::System.Data.DataColumn("encabezado", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnencabezado);
                this.columnsaludo = new global::System.Data.DataColumn("saludo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsaludo);
                this.columnpie = new global::System.Data.DataColumn("pie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpie);
                this.columnasesor = new global::System.Data.DataColumn("asesor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnasesor);
                this.columncantidad = new global::System.Data.DataColumn("cantidad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncantidad);
                this.columnfecha = new global::System.Data.DataColumn("fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfecha);
                this.columnid = new global::System.Data.DataColumn("id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidCliente = new global::System.Data.DataColumn("idCliente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidCliente);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sing5Row Newsing5Row() {
                return ((sing5Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new sing5Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(sing5Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sing5RowChanged != null)) {
                    this.sing5RowChanged(this, new sing5RowChangeEvent(((sing5Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sing5RowChanging != null)) {
                    this.sing5RowChanging(this, new sing5RowChangeEvent(((sing5Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sing5RowDeleted != null)) {
                    this.sing5RowDeleted(this, new sing5RowChangeEvent(((sing5Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sing5RowDeleting != null)) {
                    this.sing5RowDeleting(this, new sing5RowChangeEvent(((sing5Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removesing5Row(sing5Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dataCredito ds = new dataCredito();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "sing5DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class plural4DataTable : global::System.Data.TypedTableBase<plural4Row> {
            
            private global::System.Data.DataColumn columnpie;
            
            private global::System.Data.DataColumn columnasesor;
            
            private global::System.Data.DataColumn columnfecha;
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnidCliente;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public plural4DataTable() {
                this.TableName = "plural4";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal plural4DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected plural4DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pieColumn {
                get {
                    return this.columnpie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn asesorColumn {
                get {
                    return this.columnasesor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fechaColumn {
                get {
                    return this.columnfecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idClienteColumn {
                get {
                    return this.columnidCliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public plural4Row this[int index] {
                get {
                    return ((plural4Row)(this.Rows[index]));
                }
            }
            
            public event plural4RowChangeEventHandler plural4RowChanging;
            
            public event plural4RowChangeEventHandler plural4RowChanged;
            
            public event plural4RowChangeEventHandler plural4RowDeleting;
            
            public event plural4RowChangeEventHandler plural4RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addplural4Row(plural4Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public plural4Row Addplural4Row(string pie, string asesor, System.DateTime fecha, string id, string idCliente) {
                plural4Row rowplural4Row = ((plural4Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        pie,
                        asesor,
                        fecha,
                        id,
                        idCliente};
                rowplural4Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowplural4Row);
                return rowplural4Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                plural4DataTable cln = ((plural4DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new plural4DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnpie = base.Columns["pie"];
                this.columnasesor = base.Columns["asesor"];
                this.columnfecha = base.Columns["fecha"];
                this.columnid = base.Columns["id"];
                this.columnidCliente = base.Columns["idCliente"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnpie = new global::System.Data.DataColumn("pie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpie);
                this.columnasesor = new global::System.Data.DataColumn("asesor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnasesor);
                this.columnfecha = new global::System.Data.DataColumn("fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfecha);
                this.columnid = new global::System.Data.DataColumn("id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidCliente = new global::System.Data.DataColumn("idCliente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidCliente);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public plural4Row Newplural4Row() {
                return ((plural4Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new plural4Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(plural4Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.plural4RowChanged != null)) {
                    this.plural4RowChanged(this, new plural4RowChangeEvent(((plural4Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.plural4RowChanging != null)) {
                    this.plural4RowChanging(this, new plural4RowChangeEvent(((plural4Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.plural4RowDeleted != null)) {
                    this.plural4RowDeleted(this, new plural4RowChangeEvent(((plural4Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.plural4RowDeleting != null)) {
                    this.plural4RowDeleting(this, new plural4RowChangeEvent(((plural4Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeplural4Row(plural4Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dataCredito ds = new dataCredito();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "plural4DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class plural5DataTable : global::System.Data.TypedTableBase<plural5Row> {
            
            private global::System.Data.DataColumn columnpie;
            
            private global::System.Data.DataColumn columnasesor;
            
            private global::System.Data.DataColumn columncantidad;
            
            private global::System.Data.DataColumn columnfecha;
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnidCliente;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public plural5DataTable() {
                this.TableName = "plural5";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal plural5DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected plural5DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pieColumn {
                get {
                    return this.columnpie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn asesorColumn {
                get {
                    return this.columnasesor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cantidadColumn {
                get {
                    return this.columncantidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fechaColumn {
                get {
                    return this.columnfecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idClienteColumn {
                get {
                    return this.columnidCliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public plural5Row this[int index] {
                get {
                    return ((plural5Row)(this.Rows[index]));
                }
            }
            
            public event plural5RowChangeEventHandler plural5RowChanging;
            
            public event plural5RowChangeEventHandler plural5RowChanged;
            
            public event plural5RowChangeEventHandler plural5RowDeleting;
            
            public event plural5RowChangeEventHandler plural5RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addplural5Row(plural5Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public plural5Row Addplural5Row(string pie, string asesor, string cantidad, System.DateTime fecha, string id, string idCliente) {
                plural5Row rowplural5Row = ((plural5Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        pie,
                        asesor,
                        cantidad,
                        fecha,
                        id,
                        idCliente};
                rowplural5Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowplural5Row);
                return rowplural5Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                plural5DataTable cln = ((plural5DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new plural5DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnpie = base.Columns["pie"];
                this.columnasesor = base.Columns["asesor"];
                this.columncantidad = base.Columns["cantidad"];
                this.columnfecha = base.Columns["fecha"];
                this.columnid = base.Columns["id"];
                this.columnidCliente = base.Columns["idCliente"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnpie = new global::System.Data.DataColumn("pie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpie);
                this.columnasesor = new global::System.Data.DataColumn("asesor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnasesor);
                this.columncantidad = new global::System.Data.DataColumn("cantidad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncantidad);
                this.columnfecha = new global::System.Data.DataColumn("fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfecha);
                this.columnid = new global::System.Data.DataColumn("id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidCliente = new global::System.Data.DataColumn("idCliente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidCliente);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public plural5Row Newplural5Row() {
                return ((plural5Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new plural5Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(plural5Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.plural5RowChanged != null)) {
                    this.plural5RowChanged(this, new plural5RowChangeEvent(((plural5Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.plural5RowChanging != null)) {
                    this.plural5RowChanging(this, new plural5RowChangeEvent(((plural5Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.plural5RowDeleted != null)) {
                    this.plural5RowDeleted(this, new plural5RowChangeEvent(((plural5Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.plural5RowDeleting != null)) {
                    this.plural5RowDeleting(this, new plural5RowChangeEvent(((plural5Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeplural5Row(plural5Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dataCredito ds = new dataCredito();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "plural5DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class reporteSing2Row : global::System.Data.DataRow {
            
            private reporteSing2DataTable tablereporteSing2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal reporteSing2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablereporteSing2 = ((reporteSing2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string titulo {
                get {
                    try {
                        return ((string)(this[this.tablereporteSing2.tituloColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'titulo\' in table \'reporteSing2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereporteSing2.tituloColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string carta {
                get {
                    try {
                        return ((string)(this[this.tablereporteSing2.cartaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'carta\' in table \'reporteSing2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablereporteSing2.cartaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstituloNull() {
                return this.IsNull(this.tablereporteSing2.tituloColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettituloNull() {
                this[this.tablereporteSing2.tituloColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscartaNull() {
                return this.IsNull(this.tablereporteSing2.cartaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcartaNull() {
                this[this.tablereporteSing2.cartaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class cartaSing2Row : global::System.Data.DataRow {
            
            private cartaSing2DataTable tablecartaSing2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal cartaSing2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecartaSing2 = ((cartaSing2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string parte1 {
                get {
                    try {
                        return ((string)(this[this.tablecartaSing2.parte1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'parte1\' in table \'cartaSing2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecartaSing2.parte1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string parte2 {
                get {
                    try {
                        return ((string)(this[this.tablecartaSing2.parte2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'parte2\' in table \'cartaSing2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecartaSing2.parte2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string parte3 {
                get {
                    try {
                        return ((string)(this[this.tablecartaSing2.parte3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'parte3\' in table \'cartaSing2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecartaSing2.parte3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string parte4 {
                get {
                    try {
                        return ((string)(this[this.tablecartaSing2.parte4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'parte4\' in table \'cartaSing2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecartaSing2.parte4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isparte1Null() {
                return this.IsNull(this.tablecartaSing2.parte1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setparte1Null() {
                this[this.tablecartaSing2.parte1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isparte2Null() {
                return this.IsNull(this.tablecartaSing2.parte2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setparte2Null() {
                this[this.tablecartaSing2.parte2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isparte3Null() {
                return this.IsNull(this.tablecartaSing2.parte3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setparte3Null() {
                this[this.tablecartaSing2.parte3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isparte4Null() {
                return this.IsNull(this.tablecartaSing2.parte4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setparte4Null() {
                this[this.tablecartaSing2.parte4Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class clientesRow : global::System.Data.DataRow {
            
            private clientesDataTable tableclientes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal clientesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableclientes = ((clientesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    try {
                        return ((string)(this[this.tableclientes.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id\' in table \'clientes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableclientes.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fecha {
                get {
                    try {
                        return ((string)(this[this.tableclientes.fechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fecha\' in table \'clientes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableclientes.fechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nombre {
                get {
                    try {
                        return ((string)(this[this.tableclientes.nombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nombre\' in table \'clientes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableclientes.nombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string direccion {
                get {
                    try {
                        return ((string)(this[this.tableclientes.direccionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'direccion\' in table \'clientes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableclientes.direccionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string direccion2 {
                get {
                    try {
                        return ((string)(this[this.tableclientes.direccion2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'direccion2\' in table \'clientes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableclientes.direccion2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ciudad {
                get {
                    try {
                        return ((string)(this[this.tableclientes.ciudadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ciudad\' in table \'clientes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableclientes.ciudadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tipo {
                get {
                    try {
                        return ((string)(this[this.tableclientes.tipoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tipo\' in table \'clientes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableclientes.tipoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tableclientes.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tableclientes.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfechaNull() {
                return this.IsNull(this.tableclientes.fechaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfechaNull() {
                this[this.tableclientes.fechaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnombreNull() {
                return this.IsNull(this.tableclientes.nombreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnombreNull() {
                this[this.tableclientes.nombreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdireccionNull() {
                return this.IsNull(this.tableclientes.direccionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdireccionNull() {
                this[this.tableclientes.direccionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdireccion2Null() {
                return this.IsNull(this.tableclientes.direccion2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdireccion2Null() {
                this[this.tableclientes.direccion2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsciudadNull() {
                return this.IsNull(this.tableclientes.ciudadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetciudadNull() {
                this[this.tableclientes.ciudadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstipoNull() {
                return this.IsNull(this.tableclientes.tipoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettipoNull() {
                this[this.tableclientes.tipoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class sing2Row : global::System.Data.DataRow {
            
            private sing2DataTable tablesing2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sing2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesing2 = ((sing2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string encabezado {
                get {
                    try {
                        return ((string)(this[this.tablesing2.encabezadoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'encabezado\' in table \'sing2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesing2.encabezadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string saludo {
                get {
                    try {
                        return ((string)(this[this.tablesing2.saludoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'saludo\' in table \'sing2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesing2.saludoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string meses {
                get {
                    try {
                        return ((string)(this[this.tablesing2.mesesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'meses\' in table \'sing2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesing2.mesesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string anio {
                get {
                    try {
                        return ((string)(this[this.tablesing2.anioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'anio\' in table \'sing2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesing2.anioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pie {
                get {
                    try {
                        return ((string)(this[this.tablesing2.pieColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pie\' in table \'sing2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesing2.pieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string asesor {
                get {
                    try {
                        return ((string)(this[this.tablesing2.asesorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'asesor\' in table \'sing2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesing2.asesorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cantidad {
                get {
                    try {
                        return ((string)(this[this.tablesing2.cantidadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cantidad\' in table \'sing2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesing2.cantidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cantidadL {
                get {
                    try {
                        return ((string)(this[this.tablesing2.cantidadLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cantidadL\' in table \'sing2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesing2.cantidadLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fecha {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablesing2.fechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fecha\' in table \'sing2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesing2.fechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    try {
                        return ((string)(this[this.tablesing2.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id\' in table \'sing2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesing2.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idCliente {
                get {
                    try {
                        return ((string)(this[this.tablesing2.idClienteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idCliente\' in table \'sing2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesing2.idClienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsencabezadoNull() {
                return this.IsNull(this.tablesing2.encabezadoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetencabezadoNull() {
                this[this.tablesing2.encabezadoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssaludoNull() {
                return this.IsNull(this.tablesing2.saludoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsaludoNull() {
                this[this.tablesing2.saludoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmesesNull() {
                return this.IsNull(this.tablesing2.mesesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmesesNull() {
                this[this.tablesing2.mesesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsanioNull() {
                return this.IsNull(this.tablesing2.anioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetanioNull() {
                this[this.tablesing2.anioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspieNull() {
                return this.IsNull(this.tablesing2.pieColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpieNull() {
                this[this.tablesing2.pieColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsasesorNull() {
                return this.IsNull(this.tablesing2.asesorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetasesorNull() {
                this[this.tablesing2.asesorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscantidadNull() {
                return this.IsNull(this.tablesing2.cantidadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcantidadNull() {
                this[this.tablesing2.cantidadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscantidadLNull() {
                return this.IsNull(this.tablesing2.cantidadLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcantidadLNull() {
                this[this.tablesing2.cantidadLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfechaNull() {
                return this.IsNull(this.tablesing2.fechaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfechaNull() {
                this[this.tablesing2.fechaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tablesing2.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tablesing2.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidClienteNull() {
                return this.IsNull(this.tablesing2.idClienteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidClienteNull() {
                this[this.tablesing2.idClienteColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class datosSing2Row : global::System.Data.DataRow {
            
            private datosSing2DataTable tabledatosSing2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal datosSing2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledatosSing2 = ((datosSing2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nombre {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing2.nombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nombre\' in table \'datosSing2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing2.nombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string direccion {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing2.direccionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'direccion\' in table \'datosSing2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing2.direccionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string direccion2 {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing2.direccion2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'direccion2\' in table \'datosSing2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing2.direccion2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ciudad {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing2.ciudadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ciudad\' in table \'datosSing2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing2.ciudadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string encabezado {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing2.encabezadoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'encabezado\' in table \'datosSing2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing2.encabezadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string saludo {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing2.saludoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'saludo\' in table \'datosSing2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing2.saludoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string meses {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing2.mesesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'meses\' in table \'datosSing2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing2.mesesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string anio {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing2.anioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'anio\' in table \'datosSing2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing2.anioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pie {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing2.pieColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pie\' in table \'datosSing2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing2.pieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string asesor {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing2.asesorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'asesor\' in table \'datosSing2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing2.asesorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cantidad {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing2.cantidadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cantidad\' in table \'datosSing2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing2.cantidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cantidadL {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing2.cantidadLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cantidadL\' in table \'datosSing2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing2.cantidadLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fecha {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledatosSing2.fechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fecha\' in table \'datosSing2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing2.fechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing2.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id\' in table \'datosSing2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing2.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idCliente {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing2.idClienteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idCliente\' in table \'datosSing2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing2.idClienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnombreNull() {
                return this.IsNull(this.tabledatosSing2.nombreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnombreNull() {
                this[this.tabledatosSing2.nombreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdireccionNull() {
                return this.IsNull(this.tabledatosSing2.direccionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdireccionNull() {
                this[this.tabledatosSing2.direccionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdireccion2Null() {
                return this.IsNull(this.tabledatosSing2.direccion2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdireccion2Null() {
                this[this.tabledatosSing2.direccion2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsciudadNull() {
                return this.IsNull(this.tabledatosSing2.ciudadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetciudadNull() {
                this[this.tabledatosSing2.ciudadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsencabezadoNull() {
                return this.IsNull(this.tabledatosSing2.encabezadoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetencabezadoNull() {
                this[this.tabledatosSing2.encabezadoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssaludoNull() {
                return this.IsNull(this.tabledatosSing2.saludoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsaludoNull() {
                this[this.tabledatosSing2.saludoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmesesNull() {
                return this.IsNull(this.tabledatosSing2.mesesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmesesNull() {
                this[this.tabledatosSing2.mesesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsanioNull() {
                return this.IsNull(this.tabledatosSing2.anioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetanioNull() {
                this[this.tabledatosSing2.anioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspieNull() {
                return this.IsNull(this.tabledatosSing2.pieColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpieNull() {
                this[this.tabledatosSing2.pieColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsasesorNull() {
                return this.IsNull(this.tabledatosSing2.asesorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetasesorNull() {
                this[this.tabledatosSing2.asesorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscantidadNull() {
                return this.IsNull(this.tabledatosSing2.cantidadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcantidadNull() {
                this[this.tabledatosSing2.cantidadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscantidadLNull() {
                return this.IsNull(this.tabledatosSing2.cantidadLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcantidadLNull() {
                this[this.tabledatosSing2.cantidadLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfechaNull() {
                return this.IsNull(this.tabledatosSing2.fechaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfechaNull() {
                this[this.tabledatosSing2.fechaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tabledatosSing2.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tabledatosSing2.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidClienteNull() {
                return this.IsNull(this.tabledatosSing2.idClienteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidClienteNull() {
                this[this.tabledatosSing2.idClienteColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class plural2Row : global::System.Data.DataRow {
            
            private plural2DataTable tableplural2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal plural2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableplural2 = ((plural2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string meses {
                get {
                    try {
                        return ((string)(this[this.tableplural2.mesesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'meses\' in table \'plural2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplural2.mesesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string anio {
                get {
                    try {
                        return ((string)(this[this.tableplural2.anioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'anio\' in table \'plural2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplural2.anioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pie {
                get {
                    try {
                        return ((string)(this[this.tableplural2.pieColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pie\' in table \'plural2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplural2.pieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string asesor {
                get {
                    try {
                        return ((string)(this[this.tableplural2.asesorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'asesor\' in table \'plural2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplural2.asesorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cantidad {
                get {
                    try {
                        return ((string)(this[this.tableplural2.cantidadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cantidad\' in table \'plural2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplural2.cantidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cantidadL {
                get {
                    try {
                        return ((string)(this[this.tableplural2.cantidadLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cantidadL\' in table \'plural2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplural2.cantidadLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fecha {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableplural2.fechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fecha\' in table \'plural2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplural2.fechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    try {
                        return ((string)(this[this.tableplural2.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id\' in table \'plural2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplural2.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idCliente {
                get {
                    try {
                        return ((string)(this[this.tableplural2.idClienteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idCliente\' in table \'plural2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplural2.idClienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmesesNull() {
                return this.IsNull(this.tableplural2.mesesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmesesNull() {
                this[this.tableplural2.mesesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsanioNull() {
                return this.IsNull(this.tableplural2.anioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetanioNull() {
                this[this.tableplural2.anioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspieNull() {
                return this.IsNull(this.tableplural2.pieColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpieNull() {
                this[this.tableplural2.pieColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsasesorNull() {
                return this.IsNull(this.tableplural2.asesorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetasesorNull() {
                this[this.tableplural2.asesorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscantidadNull() {
                return this.IsNull(this.tableplural2.cantidadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcantidadNull() {
                this[this.tableplural2.cantidadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscantidadLNull() {
                return this.IsNull(this.tableplural2.cantidadLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcantidadLNull() {
                this[this.tableplural2.cantidadLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfechaNull() {
                return this.IsNull(this.tableplural2.fechaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfechaNull() {
                this[this.tableplural2.fechaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tableplural2.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tableplural2.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidClienteNull() {
                return this.IsNull(this.tableplural2.idClienteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidClienteNull() {
                this[this.tableplural2.idClienteColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class datosPlural2Row : global::System.Data.DataRow {
            
            private datosPlural2DataTable tabledatosPlural2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal datosPlural2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledatosPlural2 = ((datosPlural2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nombre {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural2.nombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nombre\' in table \'datosPlural2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural2.nombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string direccion {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural2.direccionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'direccion\' in table \'datosPlural2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural2.direccionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string direccion2 {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural2.direccion2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'direccion2\' in table \'datosPlural2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural2.direccion2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ciudad {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural2.ciudadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ciudad\' in table \'datosPlural2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural2.ciudadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string meses {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural2.mesesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'meses\' in table \'datosPlural2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural2.mesesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string anio {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural2.anioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'anio\' in table \'datosPlural2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural2.anioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pie {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural2.pieColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pie\' in table \'datosPlural2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural2.pieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string asesor {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural2.asesorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'asesor\' in table \'datosPlural2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural2.asesorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cantidad {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural2.cantidadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cantidad\' in table \'datosPlural2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural2.cantidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cantidadL {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural2.cantidadLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cantidadL\' in table \'datosPlural2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural2.cantidadLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fecha {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledatosPlural2.fechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fecha\' in table \'datosPlural2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural2.fechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural2.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id\' in table \'datosPlural2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural2.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idCliente {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural2.idClienteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idCliente\' in table \'datosPlural2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural2.idClienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnombreNull() {
                return this.IsNull(this.tabledatosPlural2.nombreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnombreNull() {
                this[this.tabledatosPlural2.nombreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdireccionNull() {
                return this.IsNull(this.tabledatosPlural2.direccionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdireccionNull() {
                this[this.tabledatosPlural2.direccionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdireccion2Null() {
                return this.IsNull(this.tabledatosPlural2.direccion2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdireccion2Null() {
                this[this.tabledatosPlural2.direccion2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsciudadNull() {
                return this.IsNull(this.tabledatosPlural2.ciudadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetciudadNull() {
                this[this.tabledatosPlural2.ciudadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmesesNull() {
                return this.IsNull(this.tabledatosPlural2.mesesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmesesNull() {
                this[this.tabledatosPlural2.mesesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsanioNull() {
                return this.IsNull(this.tabledatosPlural2.anioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetanioNull() {
                this[this.tabledatosPlural2.anioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspieNull() {
                return this.IsNull(this.tabledatosPlural2.pieColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpieNull() {
                this[this.tabledatosPlural2.pieColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsasesorNull() {
                return this.IsNull(this.tabledatosPlural2.asesorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetasesorNull() {
                this[this.tabledatosPlural2.asesorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscantidadNull() {
                return this.IsNull(this.tabledatosPlural2.cantidadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcantidadNull() {
                this[this.tabledatosPlural2.cantidadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscantidadLNull() {
                return this.IsNull(this.tabledatosPlural2.cantidadLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcantidadLNull() {
                this[this.tabledatosPlural2.cantidadLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfechaNull() {
                return this.IsNull(this.tabledatosPlural2.fechaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfechaNull() {
                this[this.tabledatosPlural2.fechaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tabledatosPlural2.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tabledatosPlural2.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidClienteNull() {
                return this.IsNull(this.tabledatosPlural2.idClienteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidClienteNull() {
                this[this.tabledatosPlural2.idClienteColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class datosPlural1Row : global::System.Data.DataRow {
            
            private datosPlural1DataTable tabledatosPlural1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal datosPlural1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledatosPlural1 = ((datosPlural1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nombre {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural1.nombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nombre\' in table \'datosPlural1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural1.nombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string direccion {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural1.direccionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'direccion\' in table \'datosPlural1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural1.direccionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string direccion2 {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural1.direccion2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'direccion2\' in table \'datosPlural1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural1.direccion2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ciudad {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural1.ciudadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ciudad\' in table \'datosPlural1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural1.ciudadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string meses {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural1.mesesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'meses\' in table \'datosPlural1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural1.mesesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string anio {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural1.anioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'anio\' in table \'datosPlural1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural1.anioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pie {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural1.pieColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pie\' in table \'datosPlural1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural1.pieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string asesor {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural1.asesorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'asesor\' in table \'datosPlural1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural1.asesorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cantidad {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural1.cantidadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cantidad\' in table \'datosPlural1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural1.cantidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cantidadL {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural1.cantidadLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cantidadL\' in table \'datosPlural1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural1.cantidadLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fecha {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledatosPlural1.fechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fecha\' in table \'datosPlural1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural1.fechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural1.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id\' in table \'datosPlural1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural1.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idCliente {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural1.idClienteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idCliente\' in table \'datosPlural1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural1.idClienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnombreNull() {
                return this.IsNull(this.tabledatosPlural1.nombreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnombreNull() {
                this[this.tabledatosPlural1.nombreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdireccionNull() {
                return this.IsNull(this.tabledatosPlural1.direccionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdireccionNull() {
                this[this.tabledatosPlural1.direccionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdireccion2Null() {
                return this.IsNull(this.tabledatosPlural1.direccion2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdireccion2Null() {
                this[this.tabledatosPlural1.direccion2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsciudadNull() {
                return this.IsNull(this.tabledatosPlural1.ciudadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetciudadNull() {
                this[this.tabledatosPlural1.ciudadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmesesNull() {
                return this.IsNull(this.tabledatosPlural1.mesesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmesesNull() {
                this[this.tabledatosPlural1.mesesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsanioNull() {
                return this.IsNull(this.tabledatosPlural1.anioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetanioNull() {
                this[this.tabledatosPlural1.anioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspieNull() {
                return this.IsNull(this.tabledatosPlural1.pieColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpieNull() {
                this[this.tabledatosPlural1.pieColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsasesorNull() {
                return this.IsNull(this.tabledatosPlural1.asesorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetasesorNull() {
                this[this.tabledatosPlural1.asesorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscantidadNull() {
                return this.IsNull(this.tabledatosPlural1.cantidadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcantidadNull() {
                this[this.tabledatosPlural1.cantidadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscantidadLNull() {
                return this.IsNull(this.tabledatosPlural1.cantidadLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcantidadLNull() {
                this[this.tabledatosPlural1.cantidadLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfechaNull() {
                return this.IsNull(this.tabledatosPlural1.fechaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfechaNull() {
                this[this.tabledatosPlural1.fechaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tabledatosPlural1.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tabledatosPlural1.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidClienteNull() {
                return this.IsNull(this.tabledatosPlural1.idClienteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidClienteNull() {
                this[this.tabledatosPlural1.idClienteColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class datosPlural3Row : global::System.Data.DataRow {
            
            private datosPlural3DataTable tabledatosPlural3;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal datosPlural3Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledatosPlural3 = ((datosPlural3DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nombre {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural3.nombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nombre\' in table \'datosPlural3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural3.nombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string direccion {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural3.direccionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'direccion\' in table \'datosPlural3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural3.direccionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string direccion2 {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural3.direccion2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'direccion2\' in table \'datosPlural3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural3.direccion2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ciudad {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural3.ciudadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ciudad\' in table \'datosPlural3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural3.ciudadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string meses {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural3.mesesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'meses\' in table \'datosPlural3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural3.mesesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string anio {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural3.anioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'anio\' in table \'datosPlural3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural3.anioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pie {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural3.pieColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pie\' in table \'datosPlural3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural3.pieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string asesor {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural3.asesorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'asesor\' in table \'datosPlural3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural3.asesorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cantidad {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural3.cantidadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cantidad\' in table \'datosPlural3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural3.cantidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cantidadL {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural3.cantidadLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cantidadL\' in table \'datosPlural3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural3.cantidadLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fecha {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledatosPlural3.fechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fecha\' in table \'datosPlural3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural3.fechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural3.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id\' in table \'datosPlural3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural3.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idCliente {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural3.idClienteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idCliente\' in table \'datosPlural3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural3.idClienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnombreNull() {
                return this.IsNull(this.tabledatosPlural3.nombreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnombreNull() {
                this[this.tabledatosPlural3.nombreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdireccionNull() {
                return this.IsNull(this.tabledatosPlural3.direccionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdireccionNull() {
                this[this.tabledatosPlural3.direccionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdireccion2Null() {
                return this.IsNull(this.tabledatosPlural3.direccion2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdireccion2Null() {
                this[this.tabledatosPlural3.direccion2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsciudadNull() {
                return this.IsNull(this.tabledatosPlural3.ciudadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetciudadNull() {
                this[this.tabledatosPlural3.ciudadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmesesNull() {
                return this.IsNull(this.tabledatosPlural3.mesesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmesesNull() {
                this[this.tabledatosPlural3.mesesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsanioNull() {
                return this.IsNull(this.tabledatosPlural3.anioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetanioNull() {
                this[this.tabledatosPlural3.anioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspieNull() {
                return this.IsNull(this.tabledatosPlural3.pieColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpieNull() {
                this[this.tabledatosPlural3.pieColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsasesorNull() {
                return this.IsNull(this.tabledatosPlural3.asesorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetasesorNull() {
                this[this.tabledatosPlural3.asesorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscantidadNull() {
                return this.IsNull(this.tabledatosPlural3.cantidadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcantidadNull() {
                this[this.tabledatosPlural3.cantidadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscantidadLNull() {
                return this.IsNull(this.tabledatosPlural3.cantidadLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcantidadLNull() {
                this[this.tabledatosPlural3.cantidadLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfechaNull() {
                return this.IsNull(this.tabledatosPlural3.fechaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfechaNull() {
                this[this.tabledatosPlural3.fechaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tabledatosPlural3.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tabledatosPlural3.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidClienteNull() {
                return this.IsNull(this.tabledatosPlural3.idClienteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidClienteNull() {
                this[this.tabledatosPlural3.idClienteColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class datosSing1Row : global::System.Data.DataRow {
            
            private datosSing1DataTable tabledatosSing1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal datosSing1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledatosSing1 = ((datosSing1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nombre {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing1.nombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nombre\' in table \'datosSing1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing1.nombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string direccion {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing1.direccionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'direccion\' in table \'datosSing1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing1.direccionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string direccion2 {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing1.direccion2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'direccion2\' in table \'datosSing1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing1.direccion2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ciudad {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing1.ciudadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ciudad\' in table \'datosSing1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing1.ciudadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string encabezado {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing1.encabezadoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'encabezado\' in table \'datosSing1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing1.encabezadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string saludo {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing1.saludoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'saludo\' in table \'datosSing1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing1.saludoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string meses {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing1.mesesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'meses\' in table \'datosSing1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing1.mesesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string anio {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing1.anioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'anio\' in table \'datosSing1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing1.anioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pie {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing1.pieColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pie\' in table \'datosSing1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing1.pieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string asesor {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing1.asesorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'asesor\' in table \'datosSing1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing1.asesorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cantidad {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing1.cantidadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cantidad\' in table \'datosSing1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing1.cantidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cantidadL {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing1.cantidadLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cantidadL\' in table \'datosSing1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing1.cantidadLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fecha {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledatosSing1.fechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fecha\' in table \'datosSing1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing1.fechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing1.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id\' in table \'datosSing1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing1.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idCliente {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing1.idClienteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idCliente\' in table \'datosSing1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing1.idClienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnombreNull() {
                return this.IsNull(this.tabledatosSing1.nombreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnombreNull() {
                this[this.tabledatosSing1.nombreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdireccionNull() {
                return this.IsNull(this.tabledatosSing1.direccionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdireccionNull() {
                this[this.tabledatosSing1.direccionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdireccion2Null() {
                return this.IsNull(this.tabledatosSing1.direccion2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdireccion2Null() {
                this[this.tabledatosSing1.direccion2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsciudadNull() {
                return this.IsNull(this.tabledatosSing1.ciudadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetciudadNull() {
                this[this.tabledatosSing1.ciudadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsencabezadoNull() {
                return this.IsNull(this.tabledatosSing1.encabezadoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetencabezadoNull() {
                this[this.tabledatosSing1.encabezadoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssaludoNull() {
                return this.IsNull(this.tabledatosSing1.saludoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsaludoNull() {
                this[this.tabledatosSing1.saludoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmesesNull() {
                return this.IsNull(this.tabledatosSing1.mesesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmesesNull() {
                this[this.tabledatosSing1.mesesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsanioNull() {
                return this.IsNull(this.tabledatosSing1.anioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetanioNull() {
                this[this.tabledatosSing1.anioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspieNull() {
                return this.IsNull(this.tabledatosSing1.pieColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpieNull() {
                this[this.tabledatosSing1.pieColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsasesorNull() {
                return this.IsNull(this.tabledatosSing1.asesorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetasesorNull() {
                this[this.tabledatosSing1.asesorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscantidadNull() {
                return this.IsNull(this.tabledatosSing1.cantidadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcantidadNull() {
                this[this.tabledatosSing1.cantidadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscantidadLNull() {
                return this.IsNull(this.tabledatosSing1.cantidadLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcantidadLNull() {
                this[this.tabledatosSing1.cantidadLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfechaNull() {
                return this.IsNull(this.tabledatosSing1.fechaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfechaNull() {
                this[this.tabledatosSing1.fechaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tabledatosSing1.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tabledatosSing1.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidClienteNull() {
                return this.IsNull(this.tabledatosSing1.idClienteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidClienteNull() {
                this[this.tabledatosSing1.idClienteColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class datosSing3Row : global::System.Data.DataRow {
            
            private datosSing3DataTable tabledatosSing3;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal datosSing3Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledatosSing3 = ((datosSing3DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nombre {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing3.nombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nombre\' in table \'datosSing3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing3.nombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string direccion {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing3.direccionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'direccion\' in table \'datosSing3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing3.direccionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string direccion2 {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing3.direccion2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'direccion2\' in table \'datosSing3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing3.direccion2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ciudad {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing3.ciudadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ciudad\' in table \'datosSing3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing3.ciudadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string encabezado {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing3.encabezadoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'encabezado\' in table \'datosSing3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing3.encabezadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string saludo {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing3.saludoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'saludo\' in table \'datosSing3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing3.saludoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string meses {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing3.mesesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'meses\' in table \'datosSing3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing3.mesesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string anio {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing3.anioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'anio\' in table \'datosSing3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing3.anioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pie {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing3.pieColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pie\' in table \'datosSing3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing3.pieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string asesor {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing3.asesorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'asesor\' in table \'datosSing3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing3.asesorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cantidad {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing3.cantidadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cantidad\' in table \'datosSing3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing3.cantidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cantidadL {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing3.cantidadLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cantidadL\' in table \'datosSing3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing3.cantidadLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fecha {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledatosSing3.fechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fecha\' in table \'datosSing3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing3.fechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing3.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id\' in table \'datosSing3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing3.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idCliente {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing3.idClienteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idCliente\' in table \'datosSing3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing3.idClienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnombreNull() {
                return this.IsNull(this.tabledatosSing3.nombreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnombreNull() {
                this[this.tabledatosSing3.nombreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdireccionNull() {
                return this.IsNull(this.tabledatosSing3.direccionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdireccionNull() {
                this[this.tabledatosSing3.direccionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdireccion2Null() {
                return this.IsNull(this.tabledatosSing3.direccion2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdireccion2Null() {
                this[this.tabledatosSing3.direccion2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsciudadNull() {
                return this.IsNull(this.tabledatosSing3.ciudadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetciudadNull() {
                this[this.tabledatosSing3.ciudadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsencabezadoNull() {
                return this.IsNull(this.tabledatosSing3.encabezadoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetencabezadoNull() {
                this[this.tabledatosSing3.encabezadoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssaludoNull() {
                return this.IsNull(this.tabledatosSing3.saludoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsaludoNull() {
                this[this.tabledatosSing3.saludoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmesesNull() {
                return this.IsNull(this.tabledatosSing3.mesesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmesesNull() {
                this[this.tabledatosSing3.mesesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsanioNull() {
                return this.IsNull(this.tabledatosSing3.anioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetanioNull() {
                this[this.tabledatosSing3.anioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspieNull() {
                return this.IsNull(this.tabledatosSing3.pieColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpieNull() {
                this[this.tabledatosSing3.pieColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsasesorNull() {
                return this.IsNull(this.tabledatosSing3.asesorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetasesorNull() {
                this[this.tabledatosSing3.asesorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscantidadNull() {
                return this.IsNull(this.tabledatosSing3.cantidadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcantidadNull() {
                this[this.tabledatosSing3.cantidadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscantidadLNull() {
                return this.IsNull(this.tabledatosSing3.cantidadLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcantidadLNull() {
                this[this.tabledatosSing3.cantidadLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfechaNull() {
                return this.IsNull(this.tabledatosSing3.fechaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfechaNull() {
                this[this.tabledatosSing3.fechaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tabledatosSing3.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tabledatosSing3.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidClienteNull() {
                return this.IsNull(this.tabledatosSing3.idClienteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidClienteNull() {
                this[this.tabledatosSing3.idClienteColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class datosSing4Row : global::System.Data.DataRow {
            
            private datosSing4DataTable tabledatosSing4;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal datosSing4Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledatosSing4 = ((datosSing4DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nombre {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing4.nombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nombre\' in table \'datosSing4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing4.nombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string direccion {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing4.direccionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'direccion\' in table \'datosSing4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing4.direccionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string direccion2 {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing4.direccion2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'direccion2\' in table \'datosSing4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing4.direccion2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ciudad {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing4.ciudadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ciudad\' in table \'datosSing4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing4.ciudadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string encabezado {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing4.encabezadoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'encabezado\' in table \'datosSing4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing4.encabezadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string saludo {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing4.saludoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'saludo\' in table \'datosSing4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing4.saludoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pie {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing4.pieColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pie\' in table \'datosSing4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing4.pieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string asesor {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing4.asesorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'asesor\' in table \'datosSing4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing4.asesorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fecha {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledatosSing4.fechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fecha\' in table \'datosSing4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing4.fechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing4.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id\' in table \'datosSing4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing4.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idCliente {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing4.idClienteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idCliente\' in table \'datosSing4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing4.idClienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnombreNull() {
                return this.IsNull(this.tabledatosSing4.nombreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnombreNull() {
                this[this.tabledatosSing4.nombreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdireccionNull() {
                return this.IsNull(this.tabledatosSing4.direccionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdireccionNull() {
                this[this.tabledatosSing4.direccionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdireccion2Null() {
                return this.IsNull(this.tabledatosSing4.direccion2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdireccion2Null() {
                this[this.tabledatosSing4.direccion2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsciudadNull() {
                return this.IsNull(this.tabledatosSing4.ciudadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetciudadNull() {
                this[this.tabledatosSing4.ciudadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsencabezadoNull() {
                return this.IsNull(this.tabledatosSing4.encabezadoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetencabezadoNull() {
                this[this.tabledatosSing4.encabezadoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssaludoNull() {
                return this.IsNull(this.tabledatosSing4.saludoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsaludoNull() {
                this[this.tabledatosSing4.saludoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspieNull() {
                return this.IsNull(this.tabledatosSing4.pieColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpieNull() {
                this[this.tabledatosSing4.pieColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsasesorNull() {
                return this.IsNull(this.tabledatosSing4.asesorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetasesorNull() {
                this[this.tabledatosSing4.asesorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfechaNull() {
                return this.IsNull(this.tabledatosSing4.fechaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfechaNull() {
                this[this.tabledatosSing4.fechaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tabledatosSing4.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tabledatosSing4.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidClienteNull() {
                return this.IsNull(this.tabledatosSing4.idClienteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidClienteNull() {
                this[this.tabledatosSing4.idClienteColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class datosSing5Row : global::System.Data.DataRow {
            
            private datosSing5DataTable tabledatosSing5;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal datosSing5Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledatosSing5 = ((datosSing5DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nombre {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing5.nombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nombre\' in table \'datosSing5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing5.nombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string direccion {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing5.direccionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'direccion\' in table \'datosSing5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing5.direccionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string direccion2 {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing5.direccion2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'direccion2\' in table \'datosSing5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing5.direccion2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ciudad {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing5.ciudadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ciudad\' in table \'datosSing5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing5.ciudadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string encabezado {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing5.encabezadoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'encabezado\' in table \'datosSing5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing5.encabezadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string saludo {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing5.saludoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'saludo\' in table \'datosSing5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing5.saludoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pie {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing5.pieColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pie\' in table \'datosSing5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing5.pieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string asesor {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing5.asesorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'asesor\' in table \'datosSing5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing5.asesorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cantidad {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing5.cantidadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cantidad\' in table \'datosSing5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing5.cantidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fecha {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledatosSing5.fechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fecha\' in table \'datosSing5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing5.fechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing5.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id\' in table \'datosSing5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing5.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idCliente {
                get {
                    try {
                        return ((string)(this[this.tabledatosSing5.idClienteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idCliente\' in table \'datosSing5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosSing5.idClienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnombreNull() {
                return this.IsNull(this.tabledatosSing5.nombreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnombreNull() {
                this[this.tabledatosSing5.nombreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdireccionNull() {
                return this.IsNull(this.tabledatosSing5.direccionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdireccionNull() {
                this[this.tabledatosSing5.direccionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdireccion2Null() {
                return this.IsNull(this.tabledatosSing5.direccion2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdireccion2Null() {
                this[this.tabledatosSing5.direccion2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsciudadNull() {
                return this.IsNull(this.tabledatosSing5.ciudadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetciudadNull() {
                this[this.tabledatosSing5.ciudadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsencabezadoNull() {
                return this.IsNull(this.tabledatosSing5.encabezadoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetencabezadoNull() {
                this[this.tabledatosSing5.encabezadoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssaludoNull() {
                return this.IsNull(this.tabledatosSing5.saludoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsaludoNull() {
                this[this.tabledatosSing5.saludoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspieNull() {
                return this.IsNull(this.tabledatosSing5.pieColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpieNull() {
                this[this.tabledatosSing5.pieColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsasesorNull() {
                return this.IsNull(this.tabledatosSing5.asesorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetasesorNull() {
                this[this.tabledatosSing5.asesorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscantidadNull() {
                return this.IsNull(this.tabledatosSing5.cantidadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcantidadNull() {
                this[this.tabledatosSing5.cantidadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfechaNull() {
                return this.IsNull(this.tabledatosSing5.fechaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfechaNull() {
                this[this.tabledatosSing5.fechaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tabledatosSing5.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tabledatosSing5.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidClienteNull() {
                return this.IsNull(this.tabledatosSing5.idClienteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidClienteNull() {
                this[this.tabledatosSing5.idClienteColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class datosPlural4Row : global::System.Data.DataRow {
            
            private datosPlural4DataTable tabledatosPlural4;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal datosPlural4Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledatosPlural4 = ((datosPlural4DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nombre {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural4.nombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nombre\' in table \'datosPlural4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural4.nombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string direccion {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural4.direccionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'direccion\' in table \'datosPlural4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural4.direccionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string direccion2 {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural4.direccion2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'direccion2\' in table \'datosPlural4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural4.direccion2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ciudad {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural4.ciudadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ciudad\' in table \'datosPlural4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural4.ciudadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pie {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural4.pieColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pie\' in table \'datosPlural4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural4.pieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string asesor {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural4.asesorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'asesor\' in table \'datosPlural4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural4.asesorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fecha {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledatosPlural4.fechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fecha\' in table \'datosPlural4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural4.fechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural4.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id\' in table \'datosPlural4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural4.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idCliente {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural4.idClienteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idCliente\' in table \'datosPlural4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural4.idClienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnombreNull() {
                return this.IsNull(this.tabledatosPlural4.nombreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnombreNull() {
                this[this.tabledatosPlural4.nombreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdireccionNull() {
                return this.IsNull(this.tabledatosPlural4.direccionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdireccionNull() {
                this[this.tabledatosPlural4.direccionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdireccion2Null() {
                return this.IsNull(this.tabledatosPlural4.direccion2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdireccion2Null() {
                this[this.tabledatosPlural4.direccion2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsciudadNull() {
                return this.IsNull(this.tabledatosPlural4.ciudadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetciudadNull() {
                this[this.tabledatosPlural4.ciudadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspieNull() {
                return this.IsNull(this.tabledatosPlural4.pieColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpieNull() {
                this[this.tabledatosPlural4.pieColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsasesorNull() {
                return this.IsNull(this.tabledatosPlural4.asesorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetasesorNull() {
                this[this.tabledatosPlural4.asesorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfechaNull() {
                return this.IsNull(this.tabledatosPlural4.fechaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfechaNull() {
                this[this.tabledatosPlural4.fechaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tabledatosPlural4.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tabledatosPlural4.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidClienteNull() {
                return this.IsNull(this.tabledatosPlural4.idClienteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidClienteNull() {
                this[this.tabledatosPlural4.idClienteColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class datosPlural5Row : global::System.Data.DataRow {
            
            private datosPlural5DataTable tabledatosPlural5;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal datosPlural5Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledatosPlural5 = ((datosPlural5DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nombre {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural5.nombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nombre\' in table \'datosPlural5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural5.nombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string direccion {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural5.direccionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'direccion\' in table \'datosPlural5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural5.direccionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string direccion2 {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural5.direccion2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'direccion2\' in table \'datosPlural5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural5.direccion2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ciudad {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural5.ciudadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ciudad\' in table \'datosPlural5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural5.ciudadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pie {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural5.pieColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pie\' in table \'datosPlural5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural5.pieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string asesor {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural5.asesorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'asesor\' in table \'datosPlural5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural5.asesorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cantidad {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural5.cantidadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cantidad\' in table \'datosPlural5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural5.cantidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fecha {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledatosPlural5.fechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fecha\' in table \'datosPlural5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural5.fechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural5.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id\' in table \'datosPlural5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural5.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idCliente {
                get {
                    try {
                        return ((string)(this[this.tabledatosPlural5.idClienteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idCliente\' in table \'datosPlural5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledatosPlural5.idClienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnombreNull() {
                return this.IsNull(this.tabledatosPlural5.nombreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnombreNull() {
                this[this.tabledatosPlural5.nombreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdireccionNull() {
                return this.IsNull(this.tabledatosPlural5.direccionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdireccionNull() {
                this[this.tabledatosPlural5.direccionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdireccion2Null() {
                return this.IsNull(this.tabledatosPlural5.direccion2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdireccion2Null() {
                this[this.tabledatosPlural5.direccion2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsciudadNull() {
                return this.IsNull(this.tabledatosPlural5.ciudadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetciudadNull() {
                this[this.tabledatosPlural5.ciudadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspieNull() {
                return this.IsNull(this.tabledatosPlural5.pieColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpieNull() {
                this[this.tabledatosPlural5.pieColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsasesorNull() {
                return this.IsNull(this.tabledatosPlural5.asesorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetasesorNull() {
                this[this.tabledatosPlural5.asesorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscantidadNull() {
                return this.IsNull(this.tabledatosPlural5.cantidadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcantidadNull() {
                this[this.tabledatosPlural5.cantidadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfechaNull() {
                return this.IsNull(this.tabledatosPlural5.fechaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfechaNull() {
                this[this.tabledatosPlural5.fechaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tabledatosPlural5.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tabledatosPlural5.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidClienteNull() {
                return this.IsNull(this.tabledatosPlural5.idClienteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidClienteNull() {
                this[this.tabledatosPlural5.idClienteColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class sing4Row : global::System.Data.DataRow {
            
            private sing4DataTable tablesing4;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sing4Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesing4 = ((sing4DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string encabezado {
                get {
                    try {
                        return ((string)(this[this.tablesing4.encabezadoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'encabezado\' in table \'sing4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesing4.encabezadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string saludo {
                get {
                    try {
                        return ((string)(this[this.tablesing4.saludoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'saludo\' in table \'sing4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesing4.saludoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pie {
                get {
                    try {
                        return ((string)(this[this.tablesing4.pieColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pie\' in table \'sing4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesing4.pieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string asesor {
                get {
                    try {
                        return ((string)(this[this.tablesing4.asesorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'asesor\' in table \'sing4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesing4.asesorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fecha {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablesing4.fechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fecha\' in table \'sing4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesing4.fechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    try {
                        return ((string)(this[this.tablesing4.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id\' in table \'sing4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesing4.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idCliente {
                get {
                    try {
                        return ((string)(this[this.tablesing4.idClienteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idCliente\' in table \'sing4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesing4.idClienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsencabezadoNull() {
                return this.IsNull(this.tablesing4.encabezadoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetencabezadoNull() {
                this[this.tablesing4.encabezadoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssaludoNull() {
                return this.IsNull(this.tablesing4.saludoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsaludoNull() {
                this[this.tablesing4.saludoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspieNull() {
                return this.IsNull(this.tablesing4.pieColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpieNull() {
                this[this.tablesing4.pieColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsasesorNull() {
                return this.IsNull(this.tablesing4.asesorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetasesorNull() {
                this[this.tablesing4.asesorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfechaNull() {
                return this.IsNull(this.tablesing4.fechaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfechaNull() {
                this[this.tablesing4.fechaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tablesing4.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tablesing4.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidClienteNull() {
                return this.IsNull(this.tablesing4.idClienteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidClienteNull() {
                this[this.tablesing4.idClienteColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class sing5Row : global::System.Data.DataRow {
            
            private sing5DataTable tablesing5;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sing5Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesing5 = ((sing5DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string encabezado {
                get {
                    try {
                        return ((string)(this[this.tablesing5.encabezadoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'encabezado\' in table \'sing5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesing5.encabezadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string saludo {
                get {
                    try {
                        return ((string)(this[this.tablesing5.saludoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'saludo\' in table \'sing5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesing5.saludoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pie {
                get {
                    try {
                        return ((string)(this[this.tablesing5.pieColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pie\' in table \'sing5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesing5.pieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string asesor {
                get {
                    try {
                        return ((string)(this[this.tablesing5.asesorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'asesor\' in table \'sing5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesing5.asesorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cantidad {
                get {
                    try {
                        return ((string)(this[this.tablesing5.cantidadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cantidad\' in table \'sing5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesing5.cantidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fecha {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablesing5.fechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fecha\' in table \'sing5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesing5.fechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    try {
                        return ((string)(this[this.tablesing5.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id\' in table \'sing5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesing5.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idCliente {
                get {
                    try {
                        return ((string)(this[this.tablesing5.idClienteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idCliente\' in table \'sing5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesing5.idClienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsencabezadoNull() {
                return this.IsNull(this.tablesing5.encabezadoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetencabezadoNull() {
                this[this.tablesing5.encabezadoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssaludoNull() {
                return this.IsNull(this.tablesing5.saludoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsaludoNull() {
                this[this.tablesing5.saludoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspieNull() {
                return this.IsNull(this.tablesing5.pieColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpieNull() {
                this[this.tablesing5.pieColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsasesorNull() {
                return this.IsNull(this.tablesing5.asesorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetasesorNull() {
                this[this.tablesing5.asesorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscantidadNull() {
                return this.IsNull(this.tablesing5.cantidadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcantidadNull() {
                this[this.tablesing5.cantidadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfechaNull() {
                return this.IsNull(this.tablesing5.fechaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfechaNull() {
                this[this.tablesing5.fechaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tablesing5.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tablesing5.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidClienteNull() {
                return this.IsNull(this.tablesing5.idClienteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidClienteNull() {
                this[this.tablesing5.idClienteColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class plural4Row : global::System.Data.DataRow {
            
            private plural4DataTable tableplural4;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal plural4Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableplural4 = ((plural4DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pie {
                get {
                    try {
                        return ((string)(this[this.tableplural4.pieColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pie\' in table \'plural4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplural4.pieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string asesor {
                get {
                    try {
                        return ((string)(this[this.tableplural4.asesorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'asesor\' in table \'plural4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplural4.asesorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fecha {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableplural4.fechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fecha\' in table \'plural4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplural4.fechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    try {
                        return ((string)(this[this.tableplural4.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id\' in table \'plural4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplural4.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idCliente {
                get {
                    try {
                        return ((string)(this[this.tableplural4.idClienteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idCliente\' in table \'plural4\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplural4.idClienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspieNull() {
                return this.IsNull(this.tableplural4.pieColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpieNull() {
                this[this.tableplural4.pieColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsasesorNull() {
                return this.IsNull(this.tableplural4.asesorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetasesorNull() {
                this[this.tableplural4.asesorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfechaNull() {
                return this.IsNull(this.tableplural4.fechaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfechaNull() {
                this[this.tableplural4.fechaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tableplural4.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tableplural4.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidClienteNull() {
                return this.IsNull(this.tableplural4.idClienteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidClienteNull() {
                this[this.tableplural4.idClienteColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class plural5Row : global::System.Data.DataRow {
            
            private plural5DataTable tableplural5;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal plural5Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableplural5 = ((plural5DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pie {
                get {
                    try {
                        return ((string)(this[this.tableplural5.pieColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pie\' in table \'plural5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplural5.pieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string asesor {
                get {
                    try {
                        return ((string)(this[this.tableplural5.asesorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'asesor\' in table \'plural5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplural5.asesorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cantidad {
                get {
                    try {
                        return ((string)(this[this.tableplural5.cantidadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cantidad\' in table \'plural5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplural5.cantidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fecha {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableplural5.fechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fecha\' in table \'plural5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplural5.fechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    try {
                        return ((string)(this[this.tableplural5.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id\' in table \'plural5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplural5.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idCliente {
                get {
                    try {
                        return ((string)(this[this.tableplural5.idClienteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idCliente\' in table \'plural5\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplural5.idClienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspieNull() {
                return this.IsNull(this.tableplural5.pieColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpieNull() {
                this[this.tableplural5.pieColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsasesorNull() {
                return this.IsNull(this.tableplural5.asesorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetasesorNull() {
                this[this.tableplural5.asesorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscantidadNull() {
                return this.IsNull(this.tableplural5.cantidadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcantidadNull() {
                this[this.tableplural5.cantidadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfechaNull() {
                return this.IsNull(this.tableplural5.fechaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfechaNull() {
                this[this.tableplural5.fechaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tableplural5.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tableplural5.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidClienteNull() {
                return this.IsNull(this.tableplural5.idClienteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidClienteNull() {
                this[this.tableplural5.idClienteColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class reporteSing2RowChangeEvent : global::System.EventArgs {
            
            private reporteSing2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public reporteSing2RowChangeEvent(reporteSing2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public reporteSing2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class cartaSing2RowChangeEvent : global::System.EventArgs {
            
            private cartaSing2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public cartaSing2RowChangeEvent(cartaSing2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public cartaSing2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class clientesRowChangeEvent : global::System.EventArgs {
            
            private clientesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public clientesRowChangeEvent(clientesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public clientesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class sing2RowChangeEvent : global::System.EventArgs {
            
            private sing2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sing2RowChangeEvent(sing2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sing2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class datosSing2RowChangeEvent : global::System.EventArgs {
            
            private datosSing2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosSing2RowChangeEvent(datosSing2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosSing2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class plural2RowChangeEvent : global::System.EventArgs {
            
            private plural2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public plural2RowChangeEvent(plural2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public plural2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class datosPlural2RowChangeEvent : global::System.EventArgs {
            
            private datosPlural2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosPlural2RowChangeEvent(datosPlural2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosPlural2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class datosPlural1RowChangeEvent : global::System.EventArgs {
            
            private datosPlural1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosPlural1RowChangeEvent(datosPlural1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosPlural1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class datosPlural3RowChangeEvent : global::System.EventArgs {
            
            private datosPlural3Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosPlural3RowChangeEvent(datosPlural3Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosPlural3Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class datosSing1RowChangeEvent : global::System.EventArgs {
            
            private datosSing1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosSing1RowChangeEvent(datosSing1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosSing1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class datosSing3RowChangeEvent : global::System.EventArgs {
            
            private datosSing3Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosSing3RowChangeEvent(datosSing3Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosSing3Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class datosSing4RowChangeEvent : global::System.EventArgs {
            
            private datosSing4Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosSing4RowChangeEvent(datosSing4Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosSing4Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class datosSing5RowChangeEvent : global::System.EventArgs {
            
            private datosSing5Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosSing5RowChangeEvent(datosSing5Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosSing5Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class datosPlural4RowChangeEvent : global::System.EventArgs {
            
            private datosPlural4Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosPlural4RowChangeEvent(datosPlural4Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosPlural4Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class datosPlural5RowChangeEvent : global::System.EventArgs {
            
            private datosPlural5Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosPlural5RowChangeEvent(datosPlural5Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public datosPlural5Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class sing4RowChangeEvent : global::System.EventArgs {
            
            private sing4Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sing4RowChangeEvent(sing4Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sing4Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class sing5RowChangeEvent : global::System.EventArgs {
            
            private sing5Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sing5RowChangeEvent(sing5Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sing5Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class plural4RowChangeEvent : global::System.EventArgs {
            
            private plural4Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public plural4RowChangeEvent(plural4Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public plural4Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class plural5RowChangeEvent : global::System.EventArgs {
            
            private plural5Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public plural5RowChangeEvent(plural5Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public plural5Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591